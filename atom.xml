<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>00&#39;s Adventure</title>
  
  <subtitle>Why join the navy if you can be a pirate</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://uegeek.com/"/>
  <updated>2020-01-05T09:53:30.280Z</updated>
  <id>http://uegeek.com/</id>
  
  <author>
    <name>kidult00</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计日课 Vol.004 - 好设计的关系框架和时空框架</title>
    <link href="http://uegeek.com/200105-design-diary-004.html"/>
    <id>http://uegeek.com/200105-design-diary-004.html</id>
    <published>2020-01-05T09:50:42.000Z</published>
    <updated>2020-01-05T09:53:30.280Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEtitle.jpg" alt=""></p><a id="more"></a> <p>继续<a href="https://www.uegeek.com/200103-design-diary-003.html" target="_blank" rel="noopener">上一期设计日课 </a>的话题。</p><p>上一期文章发出来以后，收到了 Oliver Ding 老师发来的讨论。</p><p>丁老师用多语言融合的方法来构建符号化表达，提出了一个很有意思的图示：</p><p><img src="http://img.viz.mobi/V004-%E5%93%81.jpeg" alt=""></p><p><img src="http://img.viz.mobi/V004-OliverDing%E4%B8%89%E5%8F%A3%E6%88%90%E5%93%81.jpg" alt=""></p><p>第一人称、第二人称、第三人称的视角代表着客观取向、主观取向与交互取向。</p><p>基于这个框架，丁老师从「设计三味」出发，回应我的问题「这是好设计吗？」，提出有三种视角的「好」的思考脉络：</p><ul><li>客观视角：规范、影响、评价</li><li>主观视角：体验、感受、情绪</li><li>互动生态视角：可供性</li></ul><p>这个思考脉络给我很大启发，特别感谢丁老师。</p><h2 id="设计评价的「关系」框架"><a href="#设计评价的「关系」框架" class="headerlink" title="设计评价的「关系」框架"></a>设计评价的「关系」框架</h2><p>上一期的讨论把问题拆开来，不免显得复杂：</p><ul><li>这个设计的对象是谁？这些人可以再分成不同类别吗？我了解都包括哪些人吗？</li><li>这个设计最初目的是什么？是否达成了呢？设计者会如何衡量？</li><li>这个设计在空间上会影响到哪些人？如何影响？影响会如何变化？</li><li>这个设计在时间上会影响到哪些人？如何影响？影响会如何变化？</li><li>不同人会如何评价它，为什么？这些评价应该如何对待？</li><li>除了「好」跟「不好」，我们更需要回答「哪里好」和「有多好」，以及，「在什么前提」下是好的</li></ul><p>丁老师的框架给出了收敛的评价维度。</p><p>评判设计优劣最常见的几种方式，包括个人偏好、设计规范、功能属性等，可以归入到「我视角」、「你视角」、「他视角」中，提出相应的评价要点：</p><p><img src="http://img.viz.mobi/V004%E5%A5%BD%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%85%B3%E7%B3%BB%E6%A1%86%E6%9E%B6.jpg" alt=""></p><p>有了这个关系框架，我们就容易从完全主观的「喜欢」、「丑」、「美」、「好」更进一步，拓展到他人的视角、群体的视角，看到一个设计的影响。</p><h2 id="设计评价的「时空」框架"><a href="#设计评价的「时空」框架" class="headerlink" title="设计评价的「时空」框架"></a>设计评价的「时空」框架</h2><p>类似的，从设计对人的影响时间尺度来看，我们也可以划分出一条比较清晰的线索：</p><table><thead><tr><th>层次</th><th>时间跨度</th><th>维度</th></tr></thead><tbody><tr><td>认知级别</td><td>&lt;1秒</td><td>形态、感知、情绪、体验</td></tr><tr><td>行为级别</td><td>1秒~天/月/年</td><td>行为、目标、功能</td></tr><tr><td>文化级别</td><td>持久</td><td>观念、文化、影响力</td></tr></tbody></table><p>既然有时间尺度，当然还可以以空间为尺度：</p><table><thead><tr><th>层次</th><th>空间范围</th><th>维度</th></tr></thead><tbody><tr><td>设计客体本身</td><td>设计本身</td><td>点线面等构成元素</td></tr><tr><td>受众</td><td>设计的利益相关者</td><td>对个体产生的影响</td></tr><tr><td>广域</td><td>群体、民族</td><td>对群体产生的影响</td></tr></tbody></table><p>把时空结合到一起，形成一个更完整的评价维度：</p><p><img src="http://img.viz.mobi/V004%E5%A5%BD%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%97%B6%E7%A9%BA%E6%A1%86%E6%9E%B6.jpg" alt=""></p><p>时空框架告诉我们，人是希望不朽的，设计也是 😂 </p><p>这样看来，建筑设计师、游戏设计师们可能分别在时间、空间维度（而不是反过来）能收获更多的好评和成就感，而信息相关的设计可能将沿着这条轨道演进：字体设计 → 平面/装帧设计 → 可视化/交互设计 → 影视和游戏设计 →虚拟现实设计 → 脑机接口设计……😳</p><p>本质上，设计也是一种模因。</p><hr><p>设计日课系列：</p><p><a href="https://www.uegeek.com/200101-design-diary-001.html" target="_blank" rel="noopener">设计日课 Vol.001 - 回到历史寻找设计</a></p><p><a href="https://www.uegeek.com/200102-design-diary-002.html" target="_blank" rel="noopener">设计日课 Vol.002 - 设计发展的驱动力</a></p><p><a href="https://www.uegeek.com/200103-design-diary-003.html" target="_blank" rel="noopener">设计日课 Vol.003 - 这是好设计吗？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEtitle.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="设计" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="设计原则" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
      <category term="Dieter Rams" scheme="http://uegeek.com/tags/Dieter-Rams/"/>
    
      <category term="Guideline" scheme="http://uegeek.com/tags/Guideline/"/>
    
  </entry>
  
  <entry>
    <title>适老化改造套内空间设计 - 客厅/起居室篇</title>
    <link href="http://uegeek.com/200105-aging-in-place-livingroom.html"/>
    <id>http://uegeek.com/200105-aging-in-place-livingroom.html</id>
    <published>2020-01-05T03:54:17.000Z</published>
    <updated>2020-01-05T05:46:32.951Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96%E6%94%B9%E9%80%A0%E5%A5%97%E5%86%85%E7%A9%BA%E9%97%B4%E8%AE%BE%E8%AE%A1-%E5%AE%A2%E5%8E%85%E7%AF%87.jpg" alt=""></p><a id="more"></a> <p>起居室是老年人日常活动的主要场所，也是一般住宅中的核心空间。这个空间需要承载包括聊天、会客、看电视、休闲娱乐等多种功能，是老年人日常生活中停留时间最长的地方之一。在设计时，应该充分考虑老年人的身心特点和需求，促进与家人和外界环境之间的交流。</p><p>00 对客厅做了适老化设计，下面是建模和渲染结果：</p><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E5%AE%A2%E5%8E%85-%E6%94%B6%E7%BA%B3.jpg" alt=""></p><h2 id="设计要点"><a href="#设计要点" class="headerlink" title="设计要点"></a>设计要点</h2><table><thead><tr><th>布局规划</th><th>安全、舒适，方便日常活动</th></tr></thead><tbody><tr><td>平面规划</td><td>距离老年人房间、卫生间不宜过远，确保一个能停放轮椅的宽裕空间</td></tr><tr><td>立面规划</td><td>尽量避免垂直高差</td></tr></tbody></table><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E5%AE%A2%E5%8E%85-%E5%B8%83%E5%B1%80.jpg" alt=""></p><p>设计要点</p><blockquote><p><strong>设计合适的空间尺度</strong></p><p><strong>保证安全</strong></p><p><strong>方便日常活动</strong></p><p><strong>根据需要选择和布置家具</strong></p></blockquote><h3 id="1-设计合适的空间尺度"><a href="#1-设计合适的空间尺度" class="headerlink" title="1.设计合适的空间尺度"></a>1.设计合适的空间尺度</h3><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E5%AE%A2%E5%8E%85-%E5%B0%BA%E5%AF%B8.jpg" alt=""></p><ul><li>起居室过小会阻碍行动，过大则会妨碍沟通</li><li>一般老年住宅中的起居室开间为 3300~4500mm，进深不宜小于 3600mm</li><li>开间与进深比例以 1:1~1:1.2 为宜</li></ul><h3 id="2-保证安全"><a href="#2-保证安全" class="headerlink" title="2.保证安全"></a>2.保证安全</h3><ul><li>起居室与阳台地面交接处不宜留有高差</li><li>地面材质应防滑、耐磨、易清洁</li><li>门窗面积要大，保证良好的采光与通风</li><li>起居室位于中部，尽量减少主要动线穿越，以免频繁打扰和形成危险</li></ul><p><img src="https://pic3.zhimg.com/80/v2-669365e66aa9e658ffa2761b3c3e07ba_hd.jpg" alt=""></p><p><img src="https://pic4.zhimg.com/80/v2-088ce6a3c21025ad3e97123f0f80b06b_hd.jpg" alt=""></p><h3 id="3-方便日常活动"><a href="#3-方便日常活动" class="headerlink" title="3.方便日常活动"></a>3.方便日常活动</h3><ul><li>可设置老人或轮椅专座，位置在方便进出的地方，能获得阳光处更佳</li><li>家具间的距离应大于 800mm，保证轮椅通过</li><li>空调送风方向不应直接对着沙发区域</li><li>提供一定的收纳空间，不费力就能拿取</li><li>老年人视力下降时，起居室照明亮度宜 100 lx 以上，餐厅 150 lx，饭桌 700 lx</li><li>根据需要增设局部照明，方便看报、打电话、进行娱乐活动等</li></ul><h3 id="4-根据需要选择和布置家具"><a href="#4-根据需要选择和布置家具" class="headerlink" title="4.根据需要选择和布置家具"></a>4.根据需要选择和布置家具</h3><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E5%AE%A2%E5%8E%85-%E7%BA%BF%E7%A8%BF.jpg" alt=""></p><ul><li>沙发两侧应有结实的扶手，便于坐下起身时撑扶</li><li>茶几应略高于沙发，方便不起身就能取放物品</li><li>沙发和茶几旁设有插座，方便使用台灯、充电器、电话等</li><li>茶几与沙发之间距离应大于 300mm，便于通行</li><li>茶几等家具尽量轻巧、可组合，方便移动和布置</li><li>电视柜宜正对沙发，电视与沙发距离为 2000~3000mm，注意避免眩光看不清电视屏幕</li><li>电视等家电插座宜略高于电视柜台面，方便插座</li></ul><p><img src="https://pic1.zhimg.com/80/v2-9d6452a1943fa3c6a8e3cd4b491cd7d4_hd.jpg" alt=""></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>GB 50340-2016 老年人居住建筑设计规范</li><li>周燕珉, 程晓青, 林菊英, &amp; 林婧怡. (2011). 老年住宅</li><li>财团法人, &amp; 高龄者住宅财团|译者. (2011). 老年住宅设计手册</li></ul><p>家人年纪大了，居家环境如果及时做出相应的调整和改造，能为他们提供更好的生活、保健环境。<strong>广州的朋友如果有相关改造需求，可以与我联系：uegeek@gmail.com.</strong></p><p><img src="http://img.viz.mobi/%E5%BE%AE%E4%BF%A1%E6%90%9C%E4%B8%80%E6%90%9C-%E9%80%82%E8%80%81%E5%8C%96.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96%E6%94%B9%E9%80%A0%E5%A5%97%E5%86%85%E7%A9%BA%E9%97%B4%E8%AE%BE%E8%AE%A1-%E5%AE%A2%E5%8E%85%E7%AF%87.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="适老化" scheme="http://uegeek.com/tags/%E9%80%82%E8%80%81%E5%8C%96/"/>
    
      <category term="Aging in place" scheme="http://uegeek.com/tags/Aging-in-place/"/>
    
      <category term="养老" scheme="http://uegeek.com/tags/%E5%85%BB%E8%80%81/"/>
    
      <category term="老年住宅" scheme="http://uegeek.com/tags/%E8%80%81%E5%B9%B4%E4%BD%8F%E5%AE%85/"/>
    
      <category term="无障碍设计" scheme="http://uegeek.com/tags/%E6%97%A0%E9%9A%9C%E7%A2%8D%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="通用设计" scheme="http://uegeek.com/tags/%E9%80%9A%E7%94%A8%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="室内设计" scheme="http://uegeek.com/tags/%E5%AE%A4%E5%86%85%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="客厅" scheme="http://uegeek.com/tags/%E5%AE%A2%E5%8E%85/"/>
    
      <category term="Living room" scheme="http://uegeek.com/tags/Living-room/"/>
    
  </entry>
  
  <entry>
    <title>适老化改造套内空间设计 - 门厅篇</title>
    <link href="http://uegeek.com/200104-aging-in-place-doorway.html"/>
    <id>http://uegeek.com/200104-aging-in-place-doorway.html</id>
    <published>2020-01-04T03:54:17.000Z</published>
    <updated>2020-01-05T05:46:45.034Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96%E6%94%B9%E9%80%A0%E5%A5%97%E5%86%85%E7%A9%BA%E9%97%B4%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%8E%85%E7%AF%87.jpg" alt=""></p><a id="more"></a> <p>门厅作为连接家和外界的空间，虽然面积不大，但是使用频繁。老年人随着年龄增大，身体机能逐渐下降，为保证方便外出，顺畅、安全，在门厅设计时有不少细节应该考虑周到。</p><p>00 对门厅做了适老化设计，下面是建模和渲染结果：</p><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85_%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85%E6%95%88%E6%9E%9C%E5%9B%BEx0.5.jpg" alt=""></p><h2 id="常见活动分析"><a href="#常见活动分析" class="headerlink" title="常见活动分析"></a>常见活动分析</h2><p>老年人进门的一般活动流程包括：</p><blockquote><p>1.拿出钥匙开门 → 2.开灯 → 3.放下手中物品 → 4.脱挂外衣 </p><p>→ 5.坐下 → 6.探身取鞋，换鞋，放鞋 → 7.站起</p></blockquote><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85-%E5%8A%A8%E7%BA%BF.jpg" alt=""></p><ul><li>换鞋：需要鞋柜，座位</li><li>穿衣：需要挂钩</li><li>开门，关门：把手易识别、易抓握，有照明</li><li>开灯，关灯：开关位置方便，操作容易</li><li>放拐杖、雨伞、包等物品：有置物空间</li><li>轮椅进出：预留尺寸，保持进出通畅</li></ul><h2 id="设计要点"><a href="#设计要点" class="headerlink" title="设计要点"></a>设计要点</h2><table><thead><tr><th>布局规划</th><th>方便进出</th></tr></thead><tbody><tr><td>平面规划</td><td>避免动线过长，特别是距离老年人经常使用的空间太远</td></tr><tr><td>立面规划</td><td>尽量避免户内外垂直高差</td></tr></tbody></table><p>设计要点</p><blockquote><p><strong>出入通畅、安全</strong></p><p><strong>保证视线和光照</strong></p><p><strong>方便穿衣换鞋</strong></p><p><strong>功能齐全</strong></p></blockquote><h3 id="1-出入通畅、安全"><a href="#1-出入通畅、安全" class="headerlink" title="1. 出入通畅、安全"></a>1. 出入通畅、安全</h3><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85-%E9%97%A8%E5%AE%BD.jpg" alt=""></p><ul><li>户门不应设置门槛，室内外垂直高差不应大于 15mm</li><li>户门洞口宽度不小于 1000mm，高度不小于 2000mm</li><li>户门应采用平开门，采用横杆式把手</li><li>户门拉手侧应保证有 400mm 以上空间，方便轮椅接近门口</li><li>避免通道狭长、曲折，应留出急救时担架出入所需的空间</li><li>地面应采用防滑、耐污材料，易于清理</li><li>鞋柜单扇柜门宽度不宜大于 350mm，打开后不应影响门厅内人的动作</li><li>除了基本进出，还要考虑接待来客的必要空间和护理人员的活动空间</li></ul><h3 id="2-保证视线和光照"><a href="#2-保证视线和光照" class="headerlink" title="2. 保证视线和光照"></a>2. 保证视线和光照</h3><ul><li>门厅宜开门见山，减少屏障和光线遮挡</li><li>门厅内应设有照明，如有自然采光更佳</li><li>灯具开关应设在进门方便操作的位置，距地面 1200mm</li><li>户门应该有高低两个观察孔，低位观察孔便于轮椅老人使用</li><li>方便老人坐在起居沙发上了解门厅的进出状况</li></ul><h3 id="3-方便穿衣换鞋"><a href="#3-方便穿衣换鞋" class="headerlink" title="3. 方便穿衣换鞋"></a>3. 方便穿衣换鞋</h3><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85-%E5%AE%B6%E5%85%B7.jpg" alt=""></p><ul><li>有充裕的空间换鞋换衣</li><li>门厅中的鞋柜、鞋凳应靠近布置，便于取放鞋子</li><li>鞋柜宜在 850mm 高度处设有台面，既可以放置小物品，又可作为扶手便于撑扶</li><li>鞋柜下部留出 300mm 左右空档，安排部分开敞的放鞋空间，便于老人换鞋</li><li>配置结实、稳定、坐面稍宽大的鞋凳，长度宜大于 450mm，方便换鞋和放置随身物品</li><li>鞋凳旁宜设置竖向扶手，上端距地面 1400mm 左右，帮助老人站立起身</li></ul><h3 id="4-功能齐全"><a href="#4-功能齐全" class="headerlink" title="4. 功能齐全"></a>4. 功能齐全</h3><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85-%E9%A2%84%E7%95%99%E5%8A%9F%E8%83%BD.jpg" alt=""></p><ul><li>门厅内可设置伞立，防止雨水滴湿地面</li><li>预留提示板位置，提醒出门前需要做的事情</li><li>可预留一处电源插座，供吸尘器等设备使用</li><li>如空间允许，门厅内宜预留轮椅暂存空间</li><li>使用轮椅的家中，墙壁上可设 350mm 高的防撞板</li><li>门厅可设穿衣镜，为防止轮椅碰撞，穿衣镜下沿应高于地面 350mm 以上</li></ul><p>适老化门厅俯瞰图：</p><p><img src="http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85_%E9%80%82%E8%80%81%E5%8C%96-%E9%97%A8%E5%8E%85%E6%95%88%E6%9E%9C%E5%9B%BE-%E4%BF%AF%E7%9E%B0.jpg" alt=""></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p>GB 50340-2016 老年人居住建筑设计规范</p></li><li><p>周燕珉, 程晓青, 林菊英, &amp; 林婧怡. (2011). 老年住宅</p></li><li><p>财团法人, &amp; 高龄者住宅财团|译者. (2011). 老年住宅设计手册</p></li></ul><p>家人年纪大了，居家环境如果及时做出相应的调整和改造，能为他们提供更好的生活、保健环境。<strong>广州的朋友如果有相关改造需求，可以与我联系：uegeek@gmail.com.</strong></p><p><img src="http://img.viz.mobi/%E5%BE%AE%E4%BF%A1%E6%90%9C%E4%B8%80%E6%90%9C-%E9%80%82%E8%80%81%E5%8C%96.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E9%80%82%E8%80%81%E5%8C%96%E6%94%B9%E9%80%A0%E5%A5%97%E5%86%85%E7%A9%BA%E9%97%B4%E8%AE%BE%E8%AE%A1-%E9%97%A8%E5%8E%85%E7%AF%87.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="适老化" scheme="http://uegeek.com/tags/%E9%80%82%E8%80%81%E5%8C%96/"/>
    
      <category term="Aging in place" scheme="http://uegeek.com/tags/Aging-in-place/"/>
    
      <category term="养老" scheme="http://uegeek.com/tags/%E5%85%BB%E8%80%81/"/>
    
      <category term="老年住宅" scheme="http://uegeek.com/tags/%E8%80%81%E5%B9%B4%E4%BD%8F%E5%AE%85/"/>
    
      <category term="无障碍设计" scheme="http://uegeek.com/tags/%E6%97%A0%E9%9A%9C%E7%A2%8D%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="通用设计" scheme="http://uegeek.com/tags/%E9%80%9A%E7%94%A8%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="室内设计" scheme="http://uegeek.com/tags/%E5%AE%A4%E5%86%85%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>设计日课 Vol.003 - 这是好设计吗？</title>
    <link href="http://uegeek.com/200103-design-diary-003.html"/>
    <id>http://uegeek.com/200103-design-diary-003.html</id>
    <published>2020-01-03T12:04:27.000Z</published>
    <updated>2020-01-03T12:06:18.439Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEvol003.jpg" alt=""></p><a id="more"></a> <p>在设计师漫长的自我成长道路上，有一个十分要紧的问题：</p><blockquote><p>这是一个好设计吗？</p></blockquote><p>这个问题关乎设计师的价值取向、审美品位，也是自我训练过程中需要反复回答的问题。</p><p>对比起艺术家，设计师面对这个问题，压力相对较小。设计当然也有很主观的部分，但它也是一种服务、一门手艺、一项工程，有理性的部分，甚至需要明确的可衡量标准。</p><h2 id="设计好不好谁说了算？"><a href="#设计好不好谁说了算？" class="headerlink" title="设计好不好谁说了算？"></a>设计好不好谁说了算？</h2><p>大部分的设计都是看得见甚至摸得着的（交互设计和服务设计不太可见），任何人都可以张口就评价设计好或不好。同一个设计，可能有一部分的使用者觉得无感，另一些使用者会破口大骂，而设计同行交口称赞，工程师嗤之以鼻——所以，这到底这是不是一个好设计？</p><p>一个设计有多个利益相关者，是不是应该给使用者赋予最高权重？毕竟设计是为他们而做的。让我们先来做几个设想：</p><ul><li>有一款游戏，制作精良，让人秒上瘾欲罢不能，玩家都说好，完全停不下来，玩得倾家荡产。这个是不是好设计？</li><li>有一幢建筑，花费了数百年才建成，劳民伤财，但是却成为后人的「世界 x 大奇迹」。这个是不是好设计？如果只花一半时间、只死一半的人呢，是好设计吗？如果后来还是默默无闻呢，是好设计吗？</li><li>有一种社会福利制度，在 A 国多年都运作良好，已经成为民众共识，几乎没有人再去讨论它。而在 B 国则引发了社会动乱。这个是不是好设计？</li></ul><p>你大概已经感受到了，评价一个设计「好不好」，是一件特别没有成本，但是也困难重重的事情。</p><p>我并不是反对脱口而出去评价一个设计，而是想把这个过程继续往下延伸：</p><ul><li>这个设计的对象是谁？这些人可以再分成不同类别吗？我了解都包括哪些人吗？</li><li>这个设计最初目的是什么？是否达成了呢？设计者会如何衡量？</li><li>这个设计在空间上会影响到哪些人？如何影响？影响会如何变化？</li><li>这个设计在时间上会影响到哪些人？如何影响？影响会如何变化？</li><li>不同人会如何评价它，为什么？这些评价应该如何对待？</li><li>除了「好」跟「不好」，我们更需要回答「哪里好」和「有多好」，以及，「在什么前提」下是好的</li></ul><h2 id="好设计有通用准则吗？"><a href="#好设计有通用准则吗？" class="headerlink" title="好设计有通用准则吗？"></a>好设计有通用准则吗？</h2><p>提出了这么多问题，那设计还有共通的准则吗？设计师到底应该坚持些什么？</p><p>当然有，你一定也见过不少。比如 Dieter Rams 的设计十诫：</p><blockquote><p>Good design:</p><p>1.Is innovative</p><p>2.Makes a product useful</p><p>3.Is aesthetic</p><p>4.Makes a product understandable</p><p>5.Is unobtrusive</p><p>6.Is honest</p><p>7.Is long-lasting</p><p>8.Is thorough down to the last detail</p><p>9.Is environmentally friendly</p><p>10.Involves as little design as possible</p></blockquote><p>这十条准则凝练、优雅，始终贯穿在 Dieter Rams 的设计中，也是无数设计师圣经般的指引。</p><p>可是，如果真的用这十条来评价一些经典设计，它们的得分可能会惨不忍睹。比如，Philippe Starck 的榨汁器</p><p><a href="https://www.google.com/url?sa=i&amp;source=images&amp;cd=&amp;cad=rja&amp;uact=8&amp;ved=2ahUKEwid2PKumefmAhXIv54KHeY4DbUQjRx6BAgBEAQ&amp;url=https%3A%2F%2Fwww.amazon.co.uk%2FPhilippe-Starck-Juicy-Citrus-Squeezer%2Fdp%2FB01MZ4OHA4&amp;psig=AOvVaw0R4e7fmvD3WxbjhLu6oV-q&amp;ust=1578132821361734" target="_blank" rel="noopener"><img src="https://images-na.ssl-images-amazon.com/images/I/31ecwDspilL.jpg" alt=""></a></p><p>它真的 understandable 符合直觉易理解吗？真的 unobtrusive 不引人注目吗？真的  environmentally friendly 而不会扎伤人吗？它能在杂乱的厨房台面不被小孩子碰倒，或者轻松被收到已经塞满的抽屉里吗？</p><p>这都还是  Dieter Rams 的工业设计同行的作品。如果跳出工业设计、产品设计范围，设计十诫需要作出调整吗？至少是排序的调整？比如，工业设计和服装设计的评价，有共通之处吗？建筑设计和舞台设计，都涉及环境空间的营造，它们有共同准则吗？字体设计和景观设计呢？</p><p>我们当然要学习经典的设计准则，但也一定要去思考准则背后的领域、思想和适用范围。</p><h2 id="设计品位的自我训练"><a href="#设计品位的自我训练" class="headerlink" title="设计品位的自我训练"></a>设计品位的自我训练</h2><p>一口气提了不少问题，感觉都把自己困住了。</p><p>回到写这篇文章的初衷，作为设计师，判断设计好不好，是一种近乎直觉的训练方法。</p><p>我们已经看到，设计评价其实比想象得要复杂，那可以怎么做，来提高设计的品味和能力呢？</p><h3 id="1-借助成熟的通用框架"><a href="#1-借助成熟的通用框架" class="headerlink" title="1. 借助成熟的通用框架"></a>1. 借助成熟的通用框架</h3><p>经典的设计原则永远是最好的起点。比如 UX/UI 设计，肯定需要把 Jakob Nielsen 版本的十诫烂熟于心：</p><ul><li>Keep users informed of system status with constant feedback. 随时向用户反馈系统状态</li><li>Set information in a logical, natural order. 按照逻辑的、自然的顺序设置信息</li><li>Ensure users can easily undo/redo actions. 确保用户可以轻松地撤销 / 重做操作</li><li>Maintain consistent standards so users know what to do next without having to learn new toolsets. 保持一致的标准，让用户知道下一步该做什么，而不必学习新的工具集</li><li>Prevent errors if possible; wherever you can’t do this, <em>warn</em> users before they commit to actions.如果可能，请防止错误; 如果您不能这样做，请在用户提交操作之前警告他们</li><li>Don’t make users remember information – keep options, etc. <em>visible</em>. 不要让用户记住信息-保留选项等可见</li><li>Make systems flexible so novices and experts can <em>choose</em> to do more or less on them. 使系统灵活，使新手和专家可以选择做或多或少他们</li><li>Design with aesthetics and minimalism in mind – don’t clutter with unnecessary items. 设计时考虑到美学和极简主义——不要把不必要的东西弄得乱七八糟</li><li>Provide plain-language error messages to pinpoint problems and likely solutions. 提供简明的语言错误信息，以查明问题和可能的解决方案</li><li>Offer easy-to-search troubleshooting resources, if needed. 如果需要，提供易于搜索的故障排除资源</li></ul><p>除了自己领域的设计准则，设计师最好还能多了解其他设计领域的黄金定律，比如互联网之父 Tim Berners Lee 提出的互联网设计原则 <a href="https://principles.design/examples/principles-of-design" target="_blank" rel="noopener">Principles of Design</a>。然后再跟自己所践行的准则相比较，这样更能引发自己对准则背后本质的思考。</p><p>除了领域性的设计准则，还有一些更为通用的评价框架。比如 Don Norman 基于认知心理学提出的理解设计的三个层次：本能，行为，反思。</p><p><img src="https://public-media.interaction-design.org/images/ux-daily/55f2b953dac3a9fb6e009b288e0b67e2d9be62899f630.gif" alt=""></p><p>在没有认知心理学的一些背景知识时，会容易把这个框架用得特别狭窄，变成类似注意力漏洞模型之类的。这三个层次其实很适合作为评价设计的三个层次：</p><ul><li>直觉体验：这个设计给人的直觉感受是什么？这对视觉设计、建筑景观设计等特别强调造型的各种设计门类都很重要</li><li>对行为的影响：这个设计如何与使用者发生关系？是否达成了设计之初的目的？这对空间设计、产品设计、交互设计、服务设计等特别强调互动关系的设计门类会更重要</li><li>对观念、文化的长期影响：这个设计对不同群体，产生了包括理念和文化上怎样的持久的影响？</li></ul><p>这是一个包含不同时间尺度、兼容多种空间尺度和人类行为认知层次的框架，有助于我们从更多维度和层次来思考设计。</p><h3 id="2-用大量经典作品训练直觉"><a href="#2-用大量经典作品训练直觉" class="headerlink" title="2. 用大量经典作品训练直觉"></a>2. 用大量经典作品训练直觉</h3><p>这个方法简单直接得多：收集领域中公认的好作品、经典作品，大量看反复看，建立对「好设计」的直觉。这对新手来说非常必要，也更简单易行。</p><p>在走量训练直觉的过程中，刚好可以对照经典的设计准则，看看经典作品是如何体现设计的「好」，以及准则是否需要随着时代和情境而变化。</p><p>这里面还可以多关注非常受争议的设计，因为可以获得大量的评述，帮助我们从不同的意见中理解大家都是怎么看待设计和创新的。</p><h3 id="3-形成自己的设计价值观"><a href="#3-形成自己的设计价值观" class="headerlink" title="3. 形成自己的设计价值观"></a>3. 形成自己的设计价值观</h3><p>随着设计阅历和能力不断提升，设计师需要慢慢形成自己的设计准则，并且尝试描述出来，而不仅仅是一种直觉和习惯。就像 Dieter Rams 的设计准则，我相信这些准则首先是他写给自己的。</p><p>准则和实践作品相互印证和影响，持续演化。从看设计，到做设计，再到讲设计，然后是用设计无声影响他人，这其中离不开日积月累形成的内核，也就是一个设计师到底如何定义设计，认为什么是好设计，如何做出好设计。</p><p>终究，「这是好设计吗」的问题，需要大量的时间、敏锐的眼光、丰富的头脑来解答。</p><p>与你共勉。</p><hr><p>设计日课系列：</p><p><a href="https://www.uegeek.com/200101-design-diary-001.html" target="_blank" rel="noopener">设计日课 Vol.001 - 回到历史寻找设计</a></p><p><a href="https://www.uegeek.com/200102-design-diary-002.html" target="_blank" rel="noopener">设计日课 Vol.002 - 设计发展的驱动力</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEvol003.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="设计" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="设计原则" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
      <category term="Dieter Rams" scheme="http://uegeek.com/tags/Dieter-Rams/"/>
    
      <category term="Guideline" scheme="http://uegeek.com/tags/Guideline/"/>
    
  </entry>
  
  <entry>
    <title>设计日课 Vol.002 - 设计发展的驱动力</title>
    <link href="http://uegeek.com/200102-design-diary-002.html"/>
    <id>http://uegeek.com/200102-design-diary-002.html</id>
    <published>2020-01-02T14:35:11.000Z</published>
    <updated>2020-01-02T16:01:43.478Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEvol002.jpg" alt=""></p><a id="more"></a> <p>昨天读了 <a href="https://www.uegeek.com/200101-design-diary-001.html" target="_blank" rel="noopener">David Raizman 的《现代设计史》的前言</a>。今天是对前两卷的记录和思考。</p><blockquote><p>第一卷  需求、供给与设计（1700-1800）</p><p>第二卷  扩张和品位（1801-1865）</p></blockquote><p><img src="https://img12.360buyimg.com/n1/jfs/t5923/113/1140788378/42612/da515bff/592f804dN444dbc8e.jpg" alt=""></p><p>俗话说，读史明智。读完这两卷讨论现代设计发端的历史，才发现过去在做设计工作时遇到的很多问题、争议和反思，其实历史上都发生过类似的进程。当时的困顿迷茫，如果能回到历史中寻找脉络，也许思路就能打开，能从更广阔的视角去看待设计活动和设计的从业者，而不再只是纠结于表面的审美争端。</p><p>设计从艺术和制作中分离出来，一定跟当时的社会和经济背景有关。生产和消费涉及复杂的因素，包括新技术、营销、传播、商业竞争等，它们共同成为研究现代设计产生的基础。</p><p>现代设计史，如何界定现代？这本书以 18 世纪为起点。</p><p>18 世纪初，皇家集中了社会上主要的财富和资源。奢侈的手工艺制品从视觉上强化了与艺术相关的社会声望和政治权力，君主通常会直接投资奢侈品的大规模生产。因皇家需求而兴起的产业，开始出现专业分工。不论是纺织品、瓷器、家具、印刷艺术，专业化生产的效率逐渐提高，产品质量却没有滑坡。这有赖于艺术家和手工艺人长期保持健康的合作关系。</p><p>同时，政府也承担着赞助和教育的职责，扶持符合官方审美趣味的作品，设计甚至是拿破仑用于体现治国方略的工具。</p><p><img src="http://img.viz.mobi/V002-%E8%B7%AF%E6%98%93%E5%8D%81%E5%9B%9B%E8%A7%86%E5%AF%9F%E5%93%A5%E7%99%BD%E6%9E%97%E7%BB%87%E9%80%A0%E5%8E%82.jpg" alt=""></p><p>查尔斯·勒布朗 《路易十四参观哥布林皇家织造厂》，1663-1675</p><p>在整个 18 世纪，生产方式和消费模式并行改革。随着社会新阶层的出现，人们对装饰艺术的兴趣日益增长，将之视为精致生活的衍生品、社会身份的标识。地位上升的中产阶级买主，开始体验和享受商品带来的舒适与便利。专业技术和新的尝试，促使生产实践和审美品位同时达到了更高水平。设计传达了来自修养的感受力，增加了各种产品的价值。在这个过程中，设计师逐渐摆脱制作的过程，更多地考虑销售，或者同生产商协议生产他们的设计。</p><p>时髦的设计和产品的多样化，同时满足了消费者的心理需求和社会需求，并刺激了商人、生产者和艺术家的商业尝试。日益膨胀的市场反映了更多样化的品味，而不再由皇家倡导的风尚所主导，设计的专业化和变化似乎也反映了民主化的社会进程。</p><p>在大批量的生产中，如何保证产品的质量和一致性是关键问题之一。<strong>需求快速增长，生长过程不断变得复杂，让设计有了专业化的必要</strong>，包括如何保证设计向产品的转化，在行业的迫切需求和实践中逐渐变得成熟而且重要起来。</p><p> 18 世纪后半叶，财富增长和流动加快，消费需求弹性增长，已经突破了地理和社会阶层的界限。生产者和商人推动生产技术和劳动力组织形式发生变化，从而确认了在经济发展过程中设计和销售所起的作用。19 世纪早期，生产加速扩张，商品和家具市场不断扩大，产品风格开始多样化，以适应不同的需求和品味。人们试图为越来越多样化的消费大众提供一个共通的原则。</p><p>在一些行业，设计还肩负着社会性的价值。比如 19 世纪早期的印刷业，开始分化出插画师、漫画家、设计师等职业，为日益发展的广告业、新闻业及其他印刷媒介设计出丰富多样的字体、图像，以努力攫取消费者的兴趣和注意力，或向公众舆论施加影响。</p><p><img src="http://img.viz.mobi/V002-London%20Street%20Scene%20with%20Poster.gif" alt=""></p><p>约翰·帕里 《伦敦街景》，1835</p><p>另一方面，在民主化进程中，设计继续扮演着重要角色。艺术作为一种知识形式，曾经为富人所独占。直到 19 世纪 60 年代，设计改革大都局限于奢侈品市场，局限于迎合这个市场的生产商。而之后，设计随着阶层发展而能够被许多人所共享。设计支持了知识的传播、技术发展、劳动效率技能的提升，从而让更广泛的民众享受到改善后的人类环境。</p><p>在生产和设计的扩张中，设计改革者们认为有必要为设计确定一个普遍标准，在大众文化中贯彻执行，这种标准最为合乎越来越多的消费者的经济、社会和道德利益。可是这也往往受到变化的市场需求的冲击，引申出了更有辩证色彩的问题：到底是良好品味更重要，还是满足消费者自己所理解的需求这种民主自由更重要。</p><p><img src="http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BE%E5%A4%B4%E5%83%8F.png" alt=""></p><p>读完历史，不由得感叹互联网行业的设计走过的发展历程，也有不少呼应历史的地方。</p><p>资本早期的投入、规模效应产生的影响力和新的商业模式，让行业的分工快速形成，专业化水平不断提高，设计响应新的技术、新的传播渠道、新的消费人群，也开始了快速的迭代。经历了早期的快速发展后，市场和品位日益多元化，为了适应更多样灵活的需求变化，建设设计规范和设计系统变得越来越重要。</p><p>设计在这个过程中，也扮演了引导和迎合不同受众需求和审美趣味的角色。设计师既需要真正从人的需求出发，也需要放下自己的一些优越感，去思考专业坚持的审美和形式，如何跟实际的需求和表达去结合。更复杂的是，在自由贸易和自由经济中，消费者购买动机有很多，美与实用的和谐也只是其中之一。</p><p>历史告诉我们，在社会变革和社会流动性逐渐加剧的环境中，设计有让待售卖的「信息」和「产品」更吸引人的能力。在不断膨胀的以消费者为主导的经济环境中，设计会扮演不可或缺的角色。所以在流量竞争日趋激烈的今天，设计很多时候都是攫取消费者的兴趣和注意力，或向公众舆论施加影响的直接工具。</p><p>不论在18 世纪现代设计发端的时期，还是进入 2020 年的今天，在任何飞速变革的时代，对于标准的探寻，以及之后在工商业扩张的过程中，对传统价值和权威的侵蚀，都是一种自然趋势。对规则和共性的渴望，对变化和需求的适应，是设计在商业扩张中持续抗衡的两股张力。</p><p>历史可能不会告诉我们如何做好手头的设计。但是如何看到更大的图景，在日常工作中感受时代变化的脉搏，应该是每个设计师在设计之外的功课吧。</p><p><a href="https://www.uegeek.com/200101-design-diary-001.html" target="_blank" rel="noopener">设计日课 Vol.001 - 回到历史寻找设计</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEvol002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="设计" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="艺术" scheme="http://uegeek.com/tags/%E8%89%BA%E6%9C%AF/"/>
    
      <category term="设计史" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1%E5%8F%B2/"/>
    
      <category term="日课" scheme="http://uegeek.com/tags/%E6%97%A5%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>设计日课 Vol.001 - 回到历史寻找设计</title>
    <link href="http://uegeek.com/200101-design-diary-001.html"/>
    <id>http://uegeek.com/200101-design-diary-001.html</id>
    <published>2020-01-01T10:42:05.000Z</published>
    <updated>2020-01-02T15:30:42.488Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEVol001.jpg" alt=""></p><a id="more"></a> <p>新年第一天，开启一个新的栏目——设计日课。</p><p>开新坑的初衷是敦促自己持续学习和思考设计，不局限于数字产品的设计，而是把触角伸向各个设计领域：建筑设计、室内设计、环境设计、交互设计、平面设计、工业设计、无障碍设计、导视设计……</p><p>设计与体验相关，这是已经被说烂的观点。我想，设计首先与人类生活相关。我们在生活的丰富性中，生出这样那样的需求，等待被满足、被优化，这是设计作为一种职业得以存在的价值前提。</p><p>保持对设计的热情和好奇，需要我们首先拥有一颗热爱生活的心和一双永不厌倦的眼睛。也希望这个栏目为自己注入更多观察、体验生活的热情，做一个认真生活的人，也为改善他人的生活质量作出一些微小的贡献。</p><h2 id="思考设计"><a href="#思考设计" class="headerlink" title="思考设计"></a>思考设计</h2><p>新年第一天，重新翻开 David Raizman 的《现代设计史》，想用这种带有仪式感的方式，重启设计师的探寻旅途。</p><p><img src="https://img12.360buyimg.com/n1/jfs/t5923/113/1140788378/42612/da515bff/592f804dN444dbc8e.jpg" alt=""></p><p>这本书的前言题目是：思考设计。</p><p>作者写作这本著作，是站在世纪之初的时代背景下，去梳理整个现代设计的历史。这是一个产品与技术不断进步的时代，只要涉及附带有审美价值和吸引力的日用品，一定离不开设计。时代周刊 2000 年其中一期的专题故事是「设计的再生」，封面有一行惹眼的文字：Function is out. Form is in. 功能过时了，形式在流行。这也是很多人，不仅是从业者对这个行当的感受。</p><p><img src="http://img.timeinc.net/time/magazine/archive/covers/2000/1101000320_400.jpg" alt=""></p><p>但是 David Raizman 接下来的叙述让人感到一丝宽慰：</p><blockquote><p>关于设计的社会和文化意义，具有吸引力的形式仅仅是其中一个原因，而且很可能不是最重要的一个。</p></blockquote><p>相比引人注目的形式，设计的经济、社会和政治功能总是掩藏在流变的、追逐流行风尚的表面之下。</p><p>几乎绝大多数人是通过日常用品接触到设计的。随着技术和产品的迭代变化，设计也具有了新的意义和功能。但是，设计作为一种活动，本质并没有发生多大变化。</p><p>曾获诺贝尔奖和图灵奖的跨领域大师赫伯特·西蒙也曾给设计下过定义：</p><blockquote><p>设计就是制定行动方案，使现有的状态朝着更好的方向发展。</p></blockquote><p>这么看来，我们每一个人不仅通过使用物品接触设计，而且我们自己就是设计师——在特定的领域中制定行动方案，推动事物的发展优化，尤其当这种优化所针对的对象是社会中的他人。可见，设计的实践和环境有多么宽泛，这个术语包括形形色色的活动，如绘制装饰草图和字体，发明新的生产工艺，创造软件界面。</p><h2 id="设计和艺术，设计和工程"><a href="#设计和艺术，设计和工程" class="headerlink" title="设计和艺术，设计和工程"></a>设计和艺术，设计和工程</h2><p>设计脱胎于艺术，直到今天仍然很难将两者明确区分开来，这也是所有从事设计的人一开始就会遇到的思考题。</p><p>设计也脱胎于制造，这种趋势出现于 18 世纪，设计师为生产者提供模型或图样，而艺术家通常只埋首创作自己的作品。到了 19 世纪，这种区分更为普遍。而区分设计师与工匠的，则看是否直接在材料上工作。进入消费社会后，设计师作为提供产品和服务的生产性群体，更关注满足客户的需求而非自己的，更关注系列产品的生产说明而非独一无二的艺术品。这让设计更加趋向于一种能够解决问题的活动，其结果是可度量的，这使得设计看起来更严肃、更具实际意义，而非一个简单的审美问题。</p><p>但是设计和艺术的联结并没有减弱，因为它们都是以<strong>理性</strong>和<strong>创造性</strong>为基础的活动，而非工程性质的技术性和材料性。因此，设计从制作中独立出来，被视为一种受人尊敬的专业活动。</p><p>这让人很快联想到设计师总是难以面对自己「美工」的工作现实和身份现实。当设计活动的理性不足、创造性不足的时候，设计师容易进入到「被异化 - 失去创造力 - 异化加剧」的恶性循环中。</p><h2 id="将设计作为生活态度"><a href="#将设计作为生活态度" class="headerlink" title="将设计作为生活态度"></a>将设计作为生活态度</h2><p>生活不会停止，社会进程只会继续加速，设计师没有理由停滞不前。</p><p>David Raizman 在前言中总结道：</p><blockquote><p>设计揭示了一种与想象、塑造以及对未来的选择有关的知识形态。</p></blockquote><p>无论当下环境如何，设计始终跟未来的理想状态相关，这是这个职业的幸福感之源，也是决定了设计在跨越过去、现在、未来的路途中充满混沌、阻碍和可能性的原因。</p><p>好好生活，在设计中体现对生活、对他人的回馈吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AF%BEVol001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="设计" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="艺术" scheme="http://uegeek.com/tags/%E8%89%BA%E6%9C%AF/"/>
    
      <category term="设计史" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1%E5%8F%B2/"/>
    
      <category term="日课" scheme="http://uegeek.com/tags/%E6%97%A5%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>作品合集，零反思合集</title>
    <link href="http://uegeek.com/191231-2019-collection.html"/>
    <id>http://uegeek.com/191231-2019-collection.html</id>
    <published>2019-12-31T09:33:49.000Z</published>
    <updated>2019-12-31T09:50:15.228Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/2019%E5%90%88%E9%9B%86%E5%B0%81%E9%9D%A2.jpg" alt=""></p><a id="more"></a> <p>今年是停滞和重建的一年。</p><p>对心理、健康、财务、职业开始了全面的清理。教课，读书，看纪录片，做设计。</p><p>用一些合集来纪念这安静的一年。</p><h2 id="一些作品"><a href="#一些作品" class="headerlink" title="一些作品"></a>一些作品</h2><p>三维和互动作品集</p><p><a href="https://v.qq.com/x/page/y3016qexdch.html" target="_blank" rel="noopener">DemoReel 2019 by kidult00</a></p><p>阿尔茨海默症科普动画</p><p><img src="http://img.viz.mobi/AlzheimerCover-title.jpg" alt=""></p><p><a href="https://www.bilibili.com/video/av70538776" target="_blank" rel="noopener">脑中的橡皮擦——阿尔茨海默病的预防和干预_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></p><h2 id="零反思合集"><a href="#零反思合集" class="headerlink" title="零反思合集"></a>零反思合集</h2><p>No.63</p><p>学会珍惜是求而不得的救赎 </p><p>No.62</p><p>存在（Being）是孩子的游戏，占有（Having）是成人的游戏。所以孩子可以「主宰」世界，而成人不能。</p><p>No.61</p><p>美是能令神经元集体沉迷的一次谐振</p><p>No.60</p><p>商业：先（部分地）利他，从而利己</p><p>艺术：先超度自己，从而超度他人</p><p>技术：放大器，加速器，作弊器</p><p>商业是欲求的世界。深刻理解对方的需求并设为起点，暂缓自己的欲望并设为终点，才能找到财富的捷径。艺术是模因的世界。只有自己先完全臣服，才能成为布道者，轻易激发他人的镜像神经元，制造共鸣。</p><p>No.59</p><p>工具（或外部资源）越丰富越强大，人自身的匮乏就越显得尴尬</p><p>No.58</p><p>时代巨轮</p><ul><li>房地产和金融繁荣的 10 年，是需求、资金、市场储备期；</li><li>接着是互联网和商品市场繁荣的 10 年，使产业升级和城市化进程加速；</li><li>增速放缓后，迎来教育和娱乐繁荣的 10 年，环境社会板结的压力并争夺所剩无几的注意力；</li><li>然后是医疗科技和服务繁荣的 10 年，老龄化社会在泡沫破灭后发现科技解决不了太多问题；</li><li>宗教和精神需求，使得经受苦难的一代幡然醒悟，我们终于在大概 2042 年迎来文艺复兴和认知革命……</li></ul><p>No.57</p><p>读书大概率对学习没帮助，读书大概率是安全的消遣方式（省钱无副作用只是消耗生命），是扩展体验习得人性的高性价比方式。</p><p>No.56</p><p>商品越多，供需匹配就越有价值；工具越多，效率就越重要；内容越多，传世作品就越难得；知识越多，洞察就越珍贵；机会越多，信任就越稀缺。永远追求更「少」的那部分。</p><p>No.55</p><p>越是突破了时空限制（或者，人的限制）的变革，越是伟大。回看几次工业革命，分别用机械、能源、信息来突破时空限制。下次该 hack 上古时期进化而来的大脑，（用作弊来）彻底改变时空观念了吧。</p><p>No.54</p><p>「回归均值」才是原力吧…</p><p>然后是均衡，死一般的均衡。<br>秩序和生命才是神迹。<br>神迹都有赏味期限。</p><p>No.53</p><p>没有无来由的快，没有360°的舒服，更没有现实和幻想的零损耗转换器。速度与加速度有关，舒服背后有接纳和平衡，而自由来自于放弃自由的幻想。</p><p>No.52</p><p>学习的关键是「习」，习到认知资源追加投入趋于零为之。天才主要是「习」得早，而不是「学」得好。可惜习太难了，还是听过道理就当作学会了要轻松得多。</p><p>No.51</p><p>我们面对的很多困局，都来自只用一种模式去应对很不一样的情境。</p><p>No.50</p><p>当你尝试去模拟世界时，你会不可避免地重新爱上它</p><p>No.49</p><p>没有你想象的好，也没有你想象的差。一定跟你的想象有所出入。请拥抱它们，珍惜它们——能时时意识到这一点，就能获得巨大的释然</p><p>No.48</p><p><a href="https://s.weibo.com/weibo?q=%23交互设计%23" target="_blank" rel="noopener">#交互设计#</a> 的核心任务，从十年前的「节省认知资源」到现在的「抢夺注意力」，难免力不从心。「抢夺注意力」不是人机交互的命题，这基本要由人际互动去实现，或者是交给包裹了欲望和焦虑的算法去实现。</p><p>No.47</p><p>有好胃口，记得要保护好牙齿。如果能力爬升缓慢，野心最好不要跟通货一样总是膨胀。</p><p>No.46</p><p>丹尼特说，当下自我是多重自我 叙事重心的呈现。那么写作成为一种疏导、强化叙事重心的方法，实现 identity disclosure，就太自然了。</p><p>No.45</p><p>设计为感官导游，也可以为思维和情绪导游。导向自我、导向未知、导向无人之境，也可以导向深渊和地狱。</p><p>No.44</p><p>Attention span<br>Cognitive load</p><p>对个人来说，如果这两个指标能被若干 App 极大影响，说明我们已经掉进了深井里，还以为自己观到了天。 </p><p>No.43</p><p>Feeling good 才是人的绝对刚需，physically &amp; mentally</p><p>You are good, or you are just feeling good?</p><p>No.42</p><p>宜居作为城市品牌</p><p>北京：抱负宜居、信息宜居</p><p>上海：感官宜居、思想宜居</p><p>广州：胃口宜居、智慧宜居</p><p>深圳：创新宜居、气候宜居</p><p>杭州：环境宜居</p><p>成都：人性宜居</p><p>No.41</p><p>如果说复制数量是自然选择的 KPI，那么需求强度以及谜题的魅力值（有多神秘、有多美）应该是知识和技术被选择的 KPI。</p><p>No.40</p><p>如果可以，依附趋势而不是体制；依附大体制（通用体制）而不是小体制（局部体制）</p><p>No.39</p><p>自信并不来自达成结果。</p><p>对于从不缺少它的人来说，自信来自于拥有它本身的 reward。对于艰难才习得这一技能的人来说，则来自于那些曾经陪伴自己一步一步走过的至暗时刻。</p><p>No.38</p><p>创业要创造的是价值转换的整个 pipeline</p><p>80% 的创业在价值定义阶段就半死不活了；剩下的 80% 死在价值转换载体；能建成高效、优雅、自生长 pipeline 的团队，才能回答创业的初始命题：以前所未有、前所未优的方式，生产和传递价值，从而获得超额收益。</p><p>No.37</p><p>对道理做出即时的反应是最容易的。而：</p><ul><li>辨别道理和观点的不同，有点难；</li><li>思考道理适用的情境，比较难；</li><li>设计一个实验验证道理，非常难；</li><li>处理万千道理之间的关系化解矛盾，特别难；</li><li>处理道理跟自己的关系，要如何对待，太难；</li><li>重建道理的形成和传播过程，几乎不可能……</li></ul><p>「道理我都懂」—— 我懂个P啊！</p><p>No.36</p><p>以暴制暴？</p><p>我们已经进入一个时代，需要创建自己的「游戏」来抵御别人的「游戏」对自己的剥削，比如消费游戏、社交游戏、裂变游戏、流量游戏、毛衣战游戏……所谓自己的「游戏」，也就是可以反复进入心流的那件事了吧。又或者是立地成佛，不玩也不制造任何「游戏」。</p><p>No.35</p><p>感动的本源</p><p>每当你看到、感受到、想象出人作为一个物种的极限和无可奈何，就是泪如雨下的时候</p><p>No.34</p><p>每一个行当走在最前面的人，是很早就以此为使命的人，不论善恶</p><p>No.33</p><p>爱靠信仰，关系靠合作。</p><p>No.32</p><p>追求无止境的东西最终会陷入痛苦，比如财富、爱、知识，甚至成长。但是生命的原力就是突破限制啊。有止境的东西很罕见，现在可能算是一种。前人的解法是，在有止境的当下去不设限的「活」，去兽性，去神性，回归人性。</p><p>No.31</p><p>驾驭财富，是玩一个「不输」的游戏，而不是一个「赢得」游戏。我一直都搞错了。</p><p>No.30</p><p>财富本来不是就零和游戏，拥有财富最多的人们会意识到，自己已经赢得了获得财富的游戏，开始投身到财富（意义）再分配的游戏中；知识更加不是<em>零</em>和游戏，知识再创造直接发生在知识获取的过程中。这是多么激动人心的游戏。</p><p>No.29</p><p>哪些东西具有指数一般的力量？时间，科技（数学/代码/网络），元认知，爱。</p><p>No.28</p><p>设计真正的使命在于，驯化并整合艺术、科技、商业的力量，为人类族群谋福利。这对设计师来说几乎不可能，对只做设计的设计师来说，更加不现实。最伟大的设计很少出自设计师之手，接受这个现实，好好学习和成长吧。</p><p>No.27</p><p>注意力税</p><p>好多特别棒的东西都是免费的，比如清新的空气、斥资巨大的科研成果、投资大师的箴言……但是它们都没有推广预算和营销经费，突破不了微信推文、微博热搜、综艺、课程广告、加了v的销售代理们的层层包围，进入不了我们的注意力范围。</p><p>No.26</p><p>提醒自己要对三样东西永远心存敬畏：人性、随机性、反常识</p><p>No.25</p><p>身处巨大奇迹之中，却视而不见，没有想过提炼出其中的能量、规律、工具为己所用和服务他人。这开始变得不可忍受。——这也许是逐渐理解可供性以后的重要转变</p><p>No.24</p><p>自由大概跟幻想成反比，做人还是贝叶斯一点好</p><p>No.23</p><p>生命中有很多 mess。能够跟各种 mess 和谐相处，以及能够分辨哪些 mess 是 path to death、哪些 mess 孕育着 beauty &amp; life，可能是生命中的头等智慧吧。</p><p>No.22</p><p>高手有经验，专家有专长。高手能达成结果，专家能讲清原理。高手内化原则，专家破解规律。 <a href="https://s.weibo.com/weibo?q=%23既要做高手也要做专家%23" target="_blank" rel="noopener">#既要做高手也要做专家#</a> </p><p>No.21</p><p>领导者最重要的一件事情，可能就是尽量从源头减少组织熵（混乱）的产生，例如用什么样的价值观吸引什么样的人用什么样的机制做哪些事。这样才能让组织保持生命力（有序性），在充满不确定性的世界中发展。成功的组织，能以最小有序结构包容最大无序性（比如生态系统）。</p><p>但现实很残酷，这个人往往是组织趋于混乱的主要来源。</p><p>No.20</p><p>遇到真正喜欢的人，你会相信性别不值一提；<br>遇到不愿放弃的事，你会明白年龄都是假象。</p><p>No.19</p><p>亲密关系三大理性瓶颈：</p><ul><li>缺乏深入理解和准确表达对方、尤其是自己的需求的习惯；</li><li>急于「求同」而想控制和改变对方，错过了「存异」带来的成长机会；</li><li>创意不足，化解不了其实可以皆大欢喜的矛盾，导致合作变竞争</li></ul><p>No.18</p><p>科技：什么更强更本源；人文：什么更好更重要</p><p>No.17</p><p>脑子里本没有回路，来回踩得多了，也就形成了路……如果隔久一点再回来踩，在多条路之间换着踩，像真的走在路上那样踩，旁边还有个告诉你踩得对不对的人/记分牌，疗效更好~ —-读《认知天性》</p><p>No.16</p><p>人的成长过程中，有一个持续的任务，就是拆除/修整各种观念中的「违章建筑」。这些四面漏风大而不倒的东西，大都是在未经评估、未经许可的情况下，不知道被谁（各种模因）偷偷搭建的。</p><p>No.15</p><p>(互联网)设计师擅长给自己扣大帽子。最难的事情往往跟ta没关系，比如商业模式设计、制度设计、系统设计等等。</p><p>用户体验设计师，大部分只是屏幕视觉和(部分)操作设计师；交互设计师，大部分只是前台用户使用流程+细节前端逻辑梳理员；UI设计师，大部分只是屏幕视觉元素调优/设计师；服务设计师，大部分只是服务系统触点梳理人+体验布道者……</p><p>不需要为太多事情负责，自我感觉就会比较良好。等到不受重视时，又经常挟用户以令诸侯，忽视工程难题，忽视系统的优雅，忽视运营目标，忘记了美并不是生产力，而只是吸引力，也忘记了吸引力只是价值传递的其中一步而已。</p><p>No.14</p><p>目标管理大概比时间/精力管理重要 100 倍吧。</p><p>「瘾」的识别、承认和引导，大概比目标管理重要100倍吧。</p><p>No.13</p><p>越来越觉得老师其实是 knowledge curator or buyer</p><p>No.12</p><p>一个新的工作/伙伴/环境（本身），与历史状态无关，具有马尔科夫性质。少把过去的设置代入当下，因为那很有可能是幻想。概率不会因为已经连开10次「大」，就赏你1次必然的「小」。当然，也有持续起作用的因子，比如自己的判断和处事方式。</p><p>No.11</p><p>快捷方式只负责快捷，不负责目的和目的地检验</p><p>No.10</p><p>N 年以后，突然明白 Star Trek TOS 的主旨了：人是高级智能，因为可以理解不符合逻辑的矛盾，制造并兼容这些矛盾。所以，爱要么是训练高级智能的方式，要么是智能发展的结果——看似不符合逻辑，实质却是碳基质最高效的超频算法。</p><p>No.9</p><p>事情总是这样，难的部分比我们想象要简单，简单的部分比我们想象的要难。</p><p>No.8</p><p>前瞻能力 ≈ 比别人更早追问本质并知行合一的能力 </p><p>并不复杂，但很困难</p><p>No.7</p><p><a href="https://s.weibo.com/weibo?q=%23交互设计%23" target="_blank" rel="noopener">#交互设计#</a> 常常把行为流，拆分成一个个（带上下文的）行为序列和节点，然后才去各个优化。面对自己的思考过程，如果也能这样拆，很快就能找出很多未经审视、不靠谱的推断。最后发现，问题大都是因为定义太粗糙、太二元、太武断、无情境</p><p>No.6</p><p>从不心怀侥幸，认清自以为是的预期，就会越来越有安全感。</p><p>No.5</p><p>大家总是认为自己输入不够，其实真相是输出少得可怜或根本没有……来自别人的东西真的太多了，哪怕稍微做一点加工、加入一些（可能）属于自己的东西，这点成本都懒得付出，只好安慰自己再多看看吧……</p><p>No.4</p><p>当下行动 &gt; 蓝图 &gt; 故事 </p><p>前提是有相对稳定的自我叙事，和指向性好而不是分辨率高的蓝图</p><p>No.3</p><p>不能拿出来讨论的，往往都会变得危险而再也不能拿出来讨论了</p><p>No.2</p><p>绝大部分事情可能没有本质区别，只有程度差异</p><p>No.1</p><p>被动的娱乐，关键词：feed</p><p>主动的娱乐，关键词：play</p><p>读书大都是披着主动外衣的被动娱乐，游戏完全可以是披着被动外衣的主动娱乐。</p><hr><p>体验比思考重要</p><p>祝你我在新的一年有新的体验~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/2019%E5%90%88%E9%9B%86%E5%B0%81%E9%9D%A2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="叽歪" scheme="http://uegeek.com/categories/%E5%8F%BD%E6%AD%AA/"/>
    
    
      <category term="2019" scheme="http://uegeek.com/tags/2019/"/>
    
      <category term="作品" scheme="http://uegeek.com/tags/%E4%BD%9C%E5%93%81/"/>
    
      <category term="零反思" scheme="http://uegeek.com/tags/%E9%9B%B6%E5%8F%8D%E6%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>科普应援！三分钟了解阿尔茨海默病及幕后创作记录</title>
    <link href="http://uegeek.com/191009-3minsci-alzheimer.html"/>
    <id>http://uegeek.com/191009-3minsci-alzheimer.html</id>
    <published>2019-10-09T08:27:46.000Z</published>
    <updated>2019-10-09T08:35:48.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/AlzheimerCover-title.jpg" alt=""></p><a id="more"></a><p>又一年国庆长假过去了，00 今年依然没有参加朋友圈摄影大赛，而是跟朋友一起做了个科普动画短片，参加 B 站主办的 <a href="https://www.bilibili.com/blackboard/3minscience.html?spm_id_from=333.788.b_7265636f5f6c697374.1" target="_blank" rel="noopener">科学3分钟 - 全国科普微视频大赛</a>。</p><p><img src="https://i0.hdslb.com/bfs/archive/9fc9d0def194c80a34baacc8cf3a17812e8d5f30.jpg" style="zoom:30%;"></p><p>这是我的科普动画处女作，片长 3:59。短片介绍了阿尔茨海默病（老年痴呆症）的常识和预防措施，希望让大家了解并开始重视这个离我们越来越近的疾病。视频地址：</p><p><a href="https://www.bilibili.com/video/av70538776/" target="_blank" rel="noopener">脑中的橡皮擦——阿尔茨海默病的预防和干预_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></p><p><strong>欢迎大家转发，并且投票支持，让它在「科学3分钟」比赛中获得好的名次，这样能让更多人参与到预防阿尔茨海默病、关怀患者和照护者的行列中。</strong></p><h3 id="如何投票支持"><a href="#如何投票支持" class="headerlink" title="如何投票支持"></a>如何投票支持</h3><p>点击下方图片跳转投票页面，登录 B 站帐号，点击「+1 票」按钮，即可投票。比赛投稿截止前（10.25）每天都可以投一票。</p><p><a href="https://www.bilibili.com/blackboard/activity-8qCJ8URwr.html?share_source=weixin&amp;share_medium=iphone&amp;bbid=7151C7DE-CD7B-42F5-809B-16AEFC491FAC190977infoc&amp;ts=1570530343015&amp;from=singlemessage&amp;isappinstalled=0#a_id=16130798&amp;s_id=11961" target="_blank" rel="noopener"><img src="http://img.viz.mobi/vote-banner-a.jpg" alt=""></a></p><p>也可以在电脑浏览器打开链接 <a href="https://www.bilibili.com/video/av70538776/" target="_blank" rel="noopener">https://www.bilibili.com/video/av70538776/</a> ，点击视频下方的「点击投票」按钮。<strong>对视频点赞、投币、收藏也可以帮助作品获得更好名次</strong>！</p><p><img src="http://img.viz.mobi/%E7%BD%91%E9%A1%B5%E6%8A%95%E7%A5%A8%E5%85%A5%E5%8F%A31.jpeg" alt=""></p><p>如果你想转发视频给更多朋友，可以转发本文，或者直接发送视频链接 <a href="https://b23.tv/av70538776。" target="_blank" rel="noopener">https://b23.tv/av70538776。</a></p><p>感谢支持~</p><h2 id="创作记录"><a href="#创作记录" class="headerlink" title="创作记录"></a>创作记录</h2><p>得知比赛信息，是在投稿开放一周以后。9.21 恰好又是世界阿尔茨海默病日，于是决定创作这个主题相关的科普短片。</p><p><img src="https://www.alzhn.ca/wp-content/uploads/2016/11/WAD-LOGO_LARGE-350x500.jpg" style="zoom:50%;"></p><p>关注阿尔茨海默病已经好几个月，之前写过一篇书评 <a href="https://www.uegeek.com/190523-alzheimers-book-not-recommended.html" target="_blank" rel="noopener">在生命战场，请远离伪科普——医药科普类书籍避坑方法</a>。并且在 <a href="https://github.com/kidult00/fighting_alzheimer" target="_blank" rel="noopener">Github 上面分享了自己整理的阿尔茨海默病优质信息源、纪录片和出版物</a>，Github 链接可以点击以下图片访问：</p><p><a href="https://github.com/kidult00/fighting_alzheimer" target="_blank" rel="noopener"><img src="http://img.viz.mobi/github-banner.jpg" alt=""></a></p><p>在构思科普视频之前，把之前看过的纪录片和关键信息整理了一遍，以<a href="http://www.chinacdc.cn/yyrdgz/201909/t20190921_205709.html" target="_blank" rel="noopener">国家卫生健康委老龄健康司的宣传材料</a>为基础，完成了短片的文案。还尝试学习剧本写作的方式，把文案一点点拆成了人物角色和场景、镜头。</p><p><img src="http://img.viz.mobi/Alzheimer_lines.jpg" style="zoom: 67%;"></p><p>接下来是动画创作阶段。此处省略掺杂了复杂情绪的过程描述约 2 万字……简单说就是借助 FCPX 和 Motion 的 Brightly 人物场景插件，完成了复杂动画的设计和转场。</p><p>接着，进入到关键的配音阶段。十分庆幸自己非常明智地请到了好朋友 MF 来创作声音部分。曾经为千万用户级 APP 主创声音的 MF 同学，带着我到专业的录音室，跳过各种录音时容易踩的坑，非常高效地完成了声音录制。特别感谢她让这个短片同时具有了温度和专业气质，也提供了不少修改建议和支持，让我能提前完成整个作品。</p><p>音乐部分，并没有专门创作背景音乐，而是花了不少时间寻找合适的 Royalty free music。最后采用了 Artificial.Music 的一首作品，感谢 ta 的创作：</p><p>––––––––––––––––––––––––––––––<br>tears that collapse like aurora raindrops of sunlight by Artificial.Music<br><a href="https://www.youtube.com/redirect?redir_token=-FeiKg200GcqUWpHDJ-V5zFlvJx8MTU3MDUxOTkyM0AxNTcwNDMzNTIz&amp;q=https%3A%2F%2Fsoundcloud.com%2Fartificial-music&amp;v=ChPk0BekVKY&amp;event=video_description" target="_blank" rel="noopener">https://soundcloud.com/artificial-music</a><br>Creative Commons — Attribution-ShareAlike 3.0 Unported— CC BY-SA 3.0<br>Free Download / Stream: <a href="https://www.youtube.com/redirect?redir_token=-FeiKg200GcqUWpHDJ-V5zFlvJx8MTU3MDUxOTkyM0AxNTcwNDMzNTIz&amp;q=http%3A%2F%2Fbit.ly%2F2nYoPCn&amp;v=ChPk0BekVKY&amp;event=video_description" target="_blank" rel="noopener">http://bit.ly/2nYoPCn</a><br>Music promoted by Audio Library <a href="https://www.youtube.com/watch?v=ChPk0BekVKY" target="_blank" rel="noopener">https://youtu.be/ChPk0BekVKY</a><br>––––––––––––––––––––––––––––––</p><p><img src="http://img.viz.mobi/creationJourney.png" alt=""></p><p>一次完整的创作历程，也是一段充满各种体验和回忆的旅途。</p><p>这次的国庆创作之旅，是我众多旅途中独特而珍贵的一段。它让我体验到，不论身在何处，有些经历可以由自己去创造。而旅途中不期而遇的人事物，也会因为用心地创造而变得鲜明生动。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/AlzheimerCover-title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="动手" scheme="http://uegeek.com/categories/%E5%8A%A8%E6%89%8B/"/>
    
    
      <category term="Animation" scheme="http://uegeek.com/tags/Animation/"/>
    
      <category term="Alzheimer&#39;s" scheme="http://uegeek.com/tags/Alzheimer-s/"/>
    
      <category term="阿尔茨海默病" scheme="http://uegeek.com/tags/%E9%98%BF%E5%B0%94%E8%8C%A8%E6%B5%B7%E9%BB%98%E7%97%85/"/>
    
      <category term="科学3分钟" scheme="http://uegeek.com/tags/%E7%A7%91%E5%AD%A63%E5%88%86%E9%92%9F/"/>
    
      <category term="科普" scheme="http://uegeek.com/tags/%E7%A7%91%E6%99%AE/"/>
    
      <category term="动画" scheme="http://uegeek.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="原创" scheme="http://uegeek.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Blender 的相机参数解析</title>
    <link href="http://uegeek.com/190908-blender-camera-setting.html"/>
    <id>http://uegeek.com/190908-blender-camera-setting.html</id>
    <published>2019-09-08T15:20:35.000Z</published>
    <updated>2019-09-08T15:25:26.381Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_dof-bokeh.jpg" alt=""></p><a id="more"></a><p>相机在三维软件中必不可少，它定义了渲染图像中的可见部分。</p><p>在 Blender 中，相机镜头相关的选项和参数有很多，它们共同决定了三维物体在二维图像中的呈现效果。</p><p><img src="http://img.viz.mobi/BlenderCameraPara.png" alt=""></p><p>在刚开始接触镜头和渲染时，你可能会对这么多参数感到头秃。今天我们一起来整理一下。</p><h2 id="Lens"><a href="#Lens" class="headerlink" title="Lens"></a>Lens</h2><p><img src="http://img.viz.mobi/BlenderCameraPara-lens.jpg" alt=""></p><h3 id="Type-投影方式"><a href="#Type-投影方式" class="headerlink" title="Type 投影方式"></a>Type 投影方式</h3><p>透视（Perspective）和正交（Orthographic）是两种不同的镜头类型。</p><p>透视跟我们在现实世界中查看事物的方式类似。远处的物体看起来比眼前的物体小，平行线会在视线远处收敛到一个点。</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_traintracks-perspective-BI.jpg" alt="../_images/render_cameras_traintracks-perspective-BI.jpg"></p><p>跟透视对应的是正交镜头，即无论距离如何，始终显示实际尺寸。这意味着平行线看起来一直平行，不会像透视那样在远处相交。</p><p><img src="https://docs.blender.org/manual/en/2.80/_images/render_cameras_traintracks-orthographic-BI.jpg" alt=""></p><p>如果选择了正交镜头，Orthographic Scale 参数可以控制投影在图像上物体的外观尺寸。</p><h3 id="Focal-Length-焦距"><a href="#Focal-Length-焦距" class="headerlink" title="Focal Length 焦距"></a>Focal Length 焦距</h3><p>焦距控制变焦程度（the amount of zoom），会影响场景在镜头中的可见范围。<strong>焦距越大，视场 FOV / Field of View  越小（more zoom），而焦距较短时，视场范围更大（less zoom）</strong>。</p><p>有点绕，看看下面这张图就明白了：</p><p><img src="http://lenoxspartanfitness.com/wp-content/uploads/2015/11/field-of-view.jpg" alt=""></p><p>在 Blender 中，对同一场景设置不同的焦距，效果如下：</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_traintracks-perspective-BI.jpg" alt=""></p><p>35mm 焦距</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_traintracks-perspective-telephoto-BI.jpg" alt=""></p><p>210mm 焦距</p><h3 id="偏移"><a href="#偏移" class="headerlink" title="偏移"></a>偏移</h3><p>调整消失点，即平行线会聚的位置。需要注意的是，偏移容易跟镜头旋转混淆。</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_traintracks-perspective-lens-shift-BI.jpg" alt=""></p><p>水平镜头偏移 0.330，水平线保持不变</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_traintracks-perspective-rotate-BI.jpg" alt=""></p><p>旋转镜头而不是使用偏移量，水平线有轻微偏斜</p><h3 id="Clip-start-and-end"><a href="#Clip-start-and-end" class="headerlink" title="Clip start and end"></a>Clip start and end</h3><p><img src="http://img.viz.mobi/BlenderCameraPara-lens.jpg" alt=""></p><p>物体直接可见的范围。此范围之外的物体仍会间接影响图像，因为 clip 范围之外的光照反射依然存在。</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_perspective.svg" alt=""></p><p>透视镜头下的 clip</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_orthographic.svg" alt=""></p><p>正交镜头下的 clip</p><h2 id="Depth-of-field-景深"><a href="#Depth-of-field-景深" class="headerlink" title="Depth of field 景深"></a>Depth of field 景深</h2><p><img src="http://img.viz.mobi/BlenderCameraPara-dof.jpg" alt=""></p><p>相机通过镜头传输光线，镜头将光束弯曲并聚焦到传感器上。光束聚集的区域称为焦点，可以使用数值或摄像机与物体之间的距离来设置。</p><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_dof-bokeh.jpg" alt=""></p><p>焦点物体：选择某个物体将自动确定焦点</p><p>焦距（Focal Distance）：由数值指定。如果在后面的「视图显示」参数中勾选了 Limits，在视图区域中的焦距处会显示黄色十字。</p><blockquote><p>提示：在 Blender 中，将鼠标悬停在“ 距离”属性上，然后按 E 开启“ 深度选择器”。单击 3D 视图中的一个点，就会采样从该点到相机的距离。</p></blockquote><h3 id="光圈"><a href="#光圈" class="headerlink" title="光圈"></a>光圈</h3><p><img src="http://img.viz.mobi/BlenderCameraPara-dof.jpg" alt=""></p><p><strong>F-Stop</strong></p><p>光圈影响景深。</p><p>从原理上讲，当镜头入光孔径越大，景深就越小，伴随背景模糊的效果。在拍摄人物、室内静物时常用大光圈。</p><p>不过，在参数设置上，最常用 F-stop 来调节光圈大小。在使用真实的相机时也是如此，AV 模式就是光圈优先模式，可以随意调节 F-stop 的大小，其他参数如 Speed 和 ISO 则由相机自动调节。</p><p><img src="https://www.thelondonphotoshoot.com/wp-content/uploads/exposure-guide.jpg" alt=""></p><p>为了方便记忆，我们只需记得 <strong>F-stop 越大，景深也越大</strong>，画面中模糊的部分也会越少。</p><p><img src="https://i.pinimg.com/originals/d0/76/64/d07664e2735dbba536bd4ba6bd8da064.jpg" alt=""></p><p><strong>Blades</strong>：在现实摄影中并没有这个参数，这是三维软件特有的。用于调整渲染中用来模糊物体形状的多边形数量。</p><p><strong>Rotation</strong> 旋转：沿着面轴旋转多边形 blade。</p><p><strong>Ratio</strong>  比率：模拟变形散景效果（anamorphic bokeh effect）。1.0 表示没有失真，小于1.0 水平失真，大于 1.0 垂直失真。</p><h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><p><img src="http://img.viz.mobi/BlenderCameraPara-camera.jpg" alt=""></p><p>Size 传感器尺寸：此参数是控制焦距的另一种方法，将 Blender 中的相机与物理相机和镜头组合相匹配非常有用，例如用于 <a href="https://docs.blender.org/manual/zh-hans/2.80/movie_clip/index.html" target="_blank" rel="noopener">运动跟踪</a>。</p><h3 id="安全区域"><a href="#安全区域" class="headerlink" title="安全区域"></a>安全区域</h3><p>安全区域提供参考线，确保可以在屏幕上看到内容的主体。</p><p>不同的屏幕有不同数量的 <a href="https://docs.blender.org/manual/zh-hans/2.80/glossary/index.html#term-overscan" target="_blank" rel="noopener">overscan</a>。边缘的部分图像可能会显示不全。后来，在电视中常常会设置两个区域：action safe and title safe，以确保内容显示完全。</p><p>现代 LCD /等离子屏幕其实没有 overscan 的问题，但安全区域仍被保留下来。在 Blender 中，可以在相机和序列视图中设置安全区域。</p><p><a href="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_safe-areas-main-BI.png" target="_blank" rel="noopener"><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_safe-areas-main-BI.png" alt="../_images/render_cameras_safe-areas-main-BI.png"></a></p><p>红线：Action safe；绿线：Title safe</p><p>另外，还可以指定安全区域的外边距（中心和渲染区域的百分比）。</p><ul><li><p>Title Safe Margins X / Y：也称为图像安全。将所有重要信息（图形或文本）放在此区域内，以确保大多数观看者都能看到。</p></li><li><p>Action Safe Margins X / Y：确保镜头中任何重要动作或角色都在此区域内。</p></li><li><p>中心切割安全区域：中心切割是第二组安全区域，用于确保在不同宽高比的屏幕上正确显示内容。Blender 默认在宽屏比率 16:9 之内显示 4:3 区域</p></li></ul><p><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_safe-areas-cuts-BI.png" alt="../_images/render_cameras_safe-areas-cuts-BI.png"></p><p>青线：Action center safe；蓝线：Title center safe</p><h2 id="视图显示"><a href="#视图显示" class="headerlink" title="视图显示"></a>视图显示</h2><p><a href="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_display-view-BI.png" target="_blank" rel="noopener"><img src="https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_display-view-BI.png" alt="../_images/render_cameras_display-view-BI.png"></a></p><p>相机视图中安全区域，传感器和名称</p><p>视图显示主要提供辅助的参考线和镜头信息。</p><ul><li><p>尺寸：3D视图中摄像机可视化的大小。此设置对相机的渲染输出没有影响。还可以使用标准比例S变换键缩放相机可视化。</p></li><li><p>Limits 范围：显示 Start and End Clipping 值。</p></li><li><p>Mist 薄雾：显示为摄像机视线上的两个连接的白点。雾的其他选项在 <em>世界环境</em> 面板中的 <a href="https://docs.blender.org/manual/zh-hans/2.80/render/cycles/world_settings.html#render-cycles-integrator-world-mist" target="_blank" rel="noopener">烟雾部分</a> 设置。</p></li><li><p>Sensor 传感器：在摄像机视图中显示虚线框。</p></li><li><p>Name 名称：在摄像机视图中打开和关闭名称显示。</p></li></ul><p>Passepartout 边框：此选项会使摄像机视野外的区域变暗。</p><p>Composition Guides 参考线：覆盖到相机显示屏上，可以在构图时提供帮助。</p><hr><p><a href="http://mp.weixin.qq.com/s?__biz=MzI3NzM3NzIzNQ==&amp;mid=100000966&amp;idx=1&amp;sn=ce2a8104ce7bbe6a1a7a6033de033070&amp;chksm=6b667d7a5c11f46c5e9a7430cc3a2525be7e9c198e809a6cb7114adff2532276607f4d92228b#rd" target="_blank" rel="noopener">Blender Principle BSDF shader 使用教程</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI3NzM3NzIzNQ==&amp;mid=100000954&amp;idx=1&amp;sn=8bcc64963454cca9d0df19a0e5340dea&amp;chksm=6b667d065c11f410f466a18a769a89ea94d77a9ef32399793190672951e8acd1f574738e9bb6#rd" target="_blank" rel="noopener">一文看懂材质/纹理 Material, Texture, Shading, Shader 的区别</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://docs.blender.org/manual/zh-hans/2.80/_images/render_cameras_dof-bokeh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="教程" scheme="http://uegeek.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="Blender" scheme="http://uegeek.com/tags/Blender/"/>
    
      <category term="CG" scheme="http://uegeek.com/tags/CG/"/>
    
      <category term="Camera" scheme="http://uegeek.com/tags/Camera/"/>
    
      <category term="Render" scheme="http://uegeek.com/tags/Render/"/>
    
      <category term="镜头" scheme="http://uegeek.com/tags/%E9%95%9C%E5%A4%B4/"/>
    
      <category term="三维" scheme="http://uegeek.com/tags/%E4%B8%89%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>设计沉浸式的展览体验</title>
    <link href="http://uegeek.com/190807-design-immersive-exhibition-experience.html"/>
    <id>http://uegeek.com/190807-design-immersive-exhibition-experience.html</id>
    <published>2019-08-07T10:00:44.000Z</published>
    <updated>2019-08-07T10:15:37.040Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/ImmerExp-framework.png" alt=""></p><a id="more"></a><p>在知名研究机构 Gartner 的<a href="https://www.gartner.com/smarterwithgartner/gartner-top-10-strategic-technology-trends-for-2019/" target="_blank" rel="noopener">2019全球十大科技创新趋势</a>报告中，沉浸式体验（Immersive Experience）是其中的一大趋势。</p><p><img src="https://blogs.gartner.com/smarterwithgartner/files/2018/09/PR_499538_Top_10_Technology_Trends_for_2019_Infographic.png" alt=""></p><blockquote><p>沉浸式体验是指通过技术手段完成模糊物理世界与数字或模拟世界之间的界限，从而营造出沉浸感的体验过程。</p></blockquote><p>Gartner 预测，到 2022 年，70％ 的企业将尝试使用沉浸式技术进行消费和企业使用，25％ 将用于生产。</p><h2 id="沉浸是一种什么感觉？"><a href="#沉浸是一种什么感觉？" class="headerlink" title="沉浸是一种什么感觉？"></a>沉浸是一种什么感觉？</h2><p>从 iMax 电影到迪士尼乐园，从虚拟现实游戏到数字艺术展览，时下的消费体验已经越来越趋于「沉浸」。</p><p>沉浸的状态对每个人应该都不陌生。这是一种空间边界变得模糊、时间感消失、个体限制似乎被消解的神奇体验。有人会将它与「心流」的状态联系起来。心流状态一般产生于全身心投入，以完成某个明确目标的过程，目标带来的挑战与个体的能力相匹配，而且伴随及时的行为反馈，能让人拥有沉浸的愉悦感和意义感。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Challenge_vs_skill.svg/300px-Challenge_vs_skill.svg.png" alt=""></p><p>沉浸感的实现必然围绕「人的感受」。具体来说，可以拆解为几个方面：</p><ul><li>多感官、较高强度的综合体验 —— 仅依靠视觉很难进入沉浸状态</li><li>展览内容和氛围的代入感 —— 沉浸与日常生活的体验有所区别</li><li>高参与度 —— 主动参与甚至操控环境与对象，是沉浸的重要特征</li></ul><p>沉浸式体验是综合性的设计难题，设计师可以多从精于此道的行业偷师，包括舞台设计、主题乐园、嘉年华、音乐节、赌场、游戏、电影等等。</p><p><img src="https://www.americantheatre.org/wp-content/uploads/2014/08/sept14_Les-Mis_Dallas2.jpg" alt=""></p><p><em>“Les Miserables” at Dallas Theater Center. (Photo by Karen Almond)</em></p><p>福布斯作者 Seth Porges 向一些作家、游戏设计师、沉浸式剧场生产者，以及其他前沿体验设计者问了这样一个问题：你认为什么才是创造一个沉浸式体验或世界的秘密？<a href="http://tech.163.com/16/0704/08/BR4A8RR100097U7U.html" target="_blank" rel="noopener">有 6 个秘密值得参考</a>：</p><ul><li>通过细节来扩大你的世界并使之有生机</li><li>明确你对观众的期望值</li><li>给观众一种身份感</li><li>将劣势转化为优势</li><li>让观众来做决定</li><li>创造一个人们能展现自我的空间</li></ul><h2 id="展览体验"><a href="#展览体验" class="headerlink" title="展览体验"></a>展览体验</h2><p>传统的博物馆和美术展览体验，多是静态和被动的，观展者按照既定的路线参观，展品陈列在橱窗中，仿佛接受朝拜的对象，无形中与观众直接形成了距离感。在这种展览中，很难获得沉浸式、身心愉悦以及富有教益的难忘体验。</p><p>我们走进博物馆，期望获得非同寻常的经历，获得那种好奇被激发，进而寻思谜题，感觉世界被打开的惊喜和微小的重生感。这跟走进电影院，经历一个充满笑和泪的故事、在制作精良的游戏中定义自我身份、到异国他乡感受迥异的文化，并没有本质的不同。</p><p>好的展览体验令人难忘，它在物质、智力和情感层面都让人感到满足。</p><p><img src="https://6mirai.tokyo-midtown.com/blog/images/20170303_blog_01.jpg" alt=""></p><p>Belaën（2003） 将展览分为三种类型：</p><ul><li>Reconstitution：重构并真实还原某个外部世界</li><li>Creation：创造某个并不真实存在的内源性世界</li><li>Interpretation：解释性地表达某些非常规尺度或现象</li></ul><p>每一种类型都可以提供引人入胜的体验。这对策展人和设计师们提出了新的课题和挑战。</p><h2 id="设计沉浸式展览体验"><a href="#设计沉浸式展览体验" class="headerlink" title="设计沉浸式展览体验"></a>设计沉浸式展览体验</h2><p>体验始终关乎于人。</p><p>而展览体验要始于一个基本问题：</p><blockquote><p>这个展览是关于什么的？</p></blockquote><p>向谁讲述什么故事，让他们理解和感受到什么，是体验的根基。</p><h3 id="基本模式"><a href="#基本模式" class="headerlink" title="基本模式"></a>基本模式</h3><p>参观展览是一次综合性的活动，观众行走、驻足、观看、阅读、沉思、触摸、操作装置、记录……用什么方式组织内容并引导展览的进行，将为展览体验定下框架。</p><p>类比数字内容产品设计中的一个重要概念「信息架构」，受众与内容之间的抽象的互动模式可以是：</p><ul><li>人不动，内容移动。这是基于屏幕的内容展示模式，例如电影、游戏。<br><img src="https://www.wired.com/wp-content/uploads/2015/04/1mtWG5W_Jsg8JrjqWS3XA4w-1.png" alt=""><br><a href="http://www.mattsundstrom.com/" target="_blank" rel="noopener"><em>Matt Sundstrom</em></a> </li><li>人移动，内容不动。这是典型的「检阅」模式，展览多采用这种模式。</li><li>人移动，内容也随之变化。<br><img src="https://www.wired.com/wp-content/uploads/2015/04/1-GMbKwQN2A9OUvqw9TLRIA-1.png" alt=""></li></ul><p>（也许还有其他的模式？检阅式的走马观花真的很无聊啊……）</p><p>展览的体验是全方位和富有层次的。更合理且有潜力的方式，应该是人移动，内容也随之变化，比如在一定区域内的内容，允许观众选择和互动。</p><p>MLL Design Lab 从物理、智力、情感三个层面给出了 <a href="https://marialorenalehman.com/post/top-10-tips-to-great-museum-exhibit-design" target="_blank" rel="noopener">Top 10 Tips to Great Museum Exhibit Design</a>：</p><p><img src="https://global-uploads.webflow.com/580e5333bd9da8b9577709ec/584296364bab51ec5b188d19_10-Tips-Diagram.jpg" alt=""></p><p>下面 00 从设计要素出发，重新整理一个沉浸式展览设计的框架，并初步讨论设计要素和关键问题。</p><p><img src="http://img.viz.mobi/ImmerExp-framework.png" alt=""></p><h3 id="I-Stage-场所-场景"><a href="#I-Stage-场所-场景" class="headerlink" title="I. Stage 场所/场景"></a>I. Stage 场所/场景</h3><p>展览是一次对未知的体验。</p><p>进入展览的阶段，就像是一封邀请函，收信人根据邀请函决定要不要赴约。Achiam（2010） 将展览看做是一次跨越文化边界的体验，观众从日常生活进入到一个虚构的情境，也是进入到一种独特的文化当中。能否从熟悉的真实世界，平滑过渡到展览所营造的小世界，对沉浸的程度有很大影响。</p><p>不论展览是什么主题，一般都跟日常生活的场所有明显区别。如何让观众能暂时忘却现实生活，进入一个陌生的情境，甚至能够意识到自己将在展览中进行某种程度的「role play」？</p><h4 id="空间"><a href="#空间" class="headerlink" title="空间"></a><strong>空间</strong></h4><p>回想一下，当我们进入电影院、游乐场、赌场的时候，空间的光照和布局能够一下子让我们跟现实世界分离，忘记刚才从哪里来，以及前一分钟还挂念着的种种琐事。所以，在进入展馆时（甚至在这之前），就需要将空间逐渐调整到展览叙事的「频道」，按照那个世界的设定去营造氛围。比如，天文主题展览可能会模拟太空和宇宙，在一个黑暗、神秘的空间内展开；而动漫展览可能需要一个敞亮、富有活力而且梦幻般的空间。观众可能会注意到空间中出现了一些「非现实」但跟主题相关的元素。这时候，叙事已经开启。</p><p><img src="https://www.amos.be/wp-content/uploads/cropped-og-image.jpg" alt=""></p><h4 id="身份"><a href="#身份" class="headerlink" title="身份"></a><strong>身份</strong></h4><p>除了空间布景，对观众做一些身份特征调整，也能帮助他们更快融入到环境和叙事中。比如，一些沉浸式戏剧会让观众带上面具，这种富有象征意义的设置，既可以激发好奇和参与感，又能推进互动。又比如，可以将观众分成几组并给予一些标识，让观众在一开始就对人物关系有所理解和期待，然后在展览中设计一些互动。</p><p><img src="http://farm7.staticflickr.com/6029/5915629467_b5b1b0f466_z.jpg" alt=""></p><h4 id="谜题"><a href="#谜题" class="headerlink" title="谜题"></a><strong>谜题</strong></h4><p>谜题永远是激励人们进行探索的法宝。提出一个好问题，让观众带着问题进入展览。这个问题一般就是展览主题的一个有趣的表述。这么简单有效的方法，竟然很少见到有展览真正在用（或者是用了但是没用好），真是不可思议。</p><p><img src="http://img.viz.mobi/canInterExpBeDesigned.jpg" alt=""></p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h4><p>在设计时展览空间时可以重点考虑：</p><ul><li>与外部世界的隔离，氛围营造</li><li>模糊原来的身份和特征</li><li>用问题/目标激发探索欲</li></ul><h3 id="II-Narrative-叙事"><a href="#II-Narrative-叙事" class="headerlink" title="II. Narrative 叙事"></a>II. Narrative 叙事</h3><p>想象力是人的独特能力。而最容易激起共鸣和想象的，就是故事。</p><p>看看电影行业，无论技术怎么发展，最经久不衰的，一定都是故事讲得最动人的影片。</p><h4 id="内容组织"><a href="#内容组织" class="headerlink" title="内容组织"></a><strong>内容组织</strong></h4><p>要将展览内容串成故事绝非易事，尤其如果固守以展品为中心的策展思路的话。在策划之初，不妨重新思考一下，展览内容还有哪些可能的组织形式？是用时间线来组织吗？还是可以考虑划分主题？或者用几组呼应的概念来贯穿？是不是用逐渐深入的一组问题会更有层次感？</p><p><img src="https://s3-ap-northeast-1.amazonaws.com/everydayobject/wp-content/uploads/2017/12/mvrdv-design-society-shenzhen-designboom-2_Easy-Resize.com_.jpg" alt=""></p><h4 id="故事要素"><a href="#故事要素" class="headerlink" title="故事要素"></a><strong>故事要素</strong></h4><p>故事的要素，包括人物、时间、地点、情节、冲突、关系变化等等。</p><p>在展览内容的叙事中，可以首先考虑希望观众扮演什么样的角色，这个角色的身份、视角和行为特点是怎样的，这些特征是否能够清楚传达给观众。有了对角色的预期（比如，模拟一个宇航员的角色），观众对内容就能有更多的理解和互动的愿望。</p><p><img src="http://img.viz.mobi/13-DSC_0023.jpg" alt=""></p><p>角色之后，是情节的展开。展览中所谓的故事情节，没办法像文字和影像媒体那样生动具象。如何让情节向前发展呢？一个办法是截取片段，比如宇航员的故事中，可以有儿时梦想、申请、训练、执行任务等几个「关卡化」了情节（甚至可以安排递进关系）。在情节中穿插一些任务，把不同关卡联系到一起。任务设计需要考虑减少认知和理解成本，提供及时、丰富的反馈，这样有助于情节的推进，更重要的是，这些任务往往就是「沉浸感」的重要来源。</p><h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a><strong>小结</strong></h4><p>展览叙事的设计，需要注意：</p><ul><li>用有趣、有故事性的方式组织展览内容</li><li>从角色身份特征出发，设计有代入感的讲述（呈现）方式</li><li>安排具有一定主题和关卡特点的情节和任务</li><li>精简叙事对象，减少信息冗余，提供明确的指引和反馈</li></ul><h3 id="III-Sensation-amp-Interaction-感觉和互动"><a href="#III-Sensation-amp-Interaction-感觉和互动" class="headerlink" title="III. Sensation &amp; Interaction 感觉和互动"></a>III. Sensation &amp; Interaction 感觉和互动</h3><p>有了前面叙事的铺垫，观众逐渐进入到角色和情节当中。如果我们能激发观众对内容的感受，鼓励与内容进行一些互动，沉浸的体验就能更进一层。</p><p><strong>展示</strong></p><p>展览内容如何被展示，决定了它如何被感知。所有的内容都需要合适的「舞台」。</p><p>传统展览绝大部分的展示方式，都是静态的安放，观众观看并离开。这跟在菜市场浏览摊档、在微博里刷时间线，还挺相似的……</p><p>沉浸的前戏是吸引。让内容带有舞台中央主角般的光环，吸引目光的停留，号召注意力的投入，才有沉浸的可能。在设计内容展示时，可以参考具有「舞台感」的设计，毫不含糊地将视觉重点引导到主要信息上面，强化引导的层次，以便让探索渐进式地展开。</p><p><img src="https://cdn.japantimes.2xx.jp/wp-content/uploads/2016/10/p20-yamada-design-e-20161030.jpg" alt=""></p><p>展览中一定会有不少让观众觉得陌生的内容，特别是科普性质的展览。为了减少认识和理解负担，设计师可以寻找目标人群所熟悉的东西，用类比和可视化的方式，在现实生活和新知之间架设起桥梁。</p><p>沉浸式的体验，不仅要求内容展示要足够明确和吸引，还需要进一步研究多感官的综合体验是如何发生的。视觉、听觉、触觉、嗅觉等，<strong>如何激发了想象，又是如何唤起种种情绪的</strong>。展览一定都有内容的主题，不妨试着再加入一条情绪的主线，看看它能带来哪些可能性。</p><p><strong>互动</strong></p><p>引人入胜的展示只是开始。它就像一封邀请函，调动起观众的好奇心，邀请他们探索更多。而承载这些探索最好的方式，是赋予观众主动权，去推进情节发生，去试验不同的可能性，并且在其中收获新的知识和体验。</p><p>日新月异的技术为我们提供了丰富而强大的工具。各种传感器可以收集环境和人的信息，屏幕、投影仪、声控设备、机械装置等等为交互结果和展示提供了数不尽的可能，而强大的控制中枢几乎可以通过编程实现各种各样的脑洞。互动不再是博物馆和展览中的奢侈体验，它已日渐成为主导的展览形式，将内容融入在互动过程中，实现沉浸的体验。</p><p><img src="https://s.kathimerini.gr/resources/2018-10/running_7-thumb-large.jpg" alt=""></p><p>在故事线中安排互动，这些互动最好能围绕最初的谜题，然后把钥匙交到观众的手中，让他们去解锁，去庆贺小小的 A-ha moment。</p><p>现在有不少网红展览，特别注重拍照效果，让大家在过程中拍照传播。但是，这种展览往往没法达到沉浸的状态。当人们沉浸地探索有趣的事物，怎么会想到掏出手机来自拍呢？并不是说传播不重要，但是当下的探索和满足，应该比美美的自拍更值得追求。刹那的体验才是永恒。</p><h4 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h4><p>感觉和互动是沉浸的关键环节，可以重点考虑：</p><ul><li>为内容提供「舞台般」聚焦的展示，拉开信息层级的对比</li><li>运用类比和可视化，降低认知和理解负担</li><li>提供多种感官体验并激发想象和情绪（尝试设计情绪曲线）</li><li>围绕主题和问题设计互动方式，将内容融入互动中</li><li>用新的技术手段收集、处理、展示多维度的信息</li></ul><h3 id="IV-Resonance-amp-Reflection-共鸣和反思"><a href="#IV-Resonance-amp-Reflection-共鸣和反思" class="headerlink" title="IV. Resonance &amp; Reflection 共鸣和反思"></a>IV. Resonance &amp; Reflection 共鸣和反思</h3><p>这道是加分题。</p><p>沉浸式体验已经非常不易，能不能更进一步升华？</p><p>回顾我们所经历的深刻体验，为什么它们能历久弥新？我想，这些体验有一些共同的特点。一是在当下能激发强烈的共鸣，顿悟也好，敬畏感也好，超越极限的感动也好，都是在某些情感维度上产生共鸣，从而跟主题内容、跟作者建立了深层次的联结；第二个特点是基于这个经历，让我有了一些反思和洞察，它们引导我获得一次小小的认知更新甚至重生，让我对生活的某些面向，产生前所未有的理解和态度。也就是说，它让我成为了更好的我。</p><p><img src="http://www.graphicthoughtfacility.com/media/uploads/images/WAI-Me3-1-WEB_6.jpg" alt=""></p><p>一次令人难忘的展览体验，既能让人在当下沉浸，获得深层次的情感共鸣，又能持续影响日常生活，引发自我的小小进化。我想，这就是策展人和设计师的终极目标了。</p><blockquote><p>感谢阅读。如有展览、科普活动的合作，请联系 uegeek_at_gmail.com</p></blockquote><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li><p>Belaën, F. 2003. L’analyse de l’apparition d’un nouveau genre culturel dans les musées des sciences: les expositions d’immersion. Paper presented at the international cultural heritage informatics meeting, September 8􏰃12, in Paris, France.</p></li><li><p>Achiam, M. (2010). Designing immersion exhibits as border-crossing environments. <em>Museum Management and Curatorship</em>, <em>25</em>, 323–336. <a href="https://doi.org/10.1080/09647775.2010.498990" target="_blank" rel="noopener">https://doi.org/10.1080/09647775.2010.498990</a></p></li><li><p><a href="https://www.gartner.com/smarterwithgartner/gartner-top-10-strategic-technology-trends-for-2019/" target="_blank" rel="noopener">Gartner Top 10 Strategic Technology Trends for 2019 - Smarter With Gartner</a></p></li><li><p><a href="https://www.wikiwand.com/en/Flow_(psychology" target="_blank" rel="noopener">Flow (psychology) - Wikiwand</a>)</p></li><li><p><a href="http://ww2.aam-us.org/resources/ethics-standards-and-best-practices/standards" target="_blank" rel="noopener">Museum Standards and Best Practices</a></p></li><li><p><a href="https://marialorenalehman.com/post/top-10-tips-to-great-museum-exhibit-design" target="_blank" rel="noopener">Top 10 Tips to Great Museum Exhibit Design</a></p></li><li><p><a href="https://www.wired.com/2015/04/how-to-design-for-virtual-reality/#.3wyypns43.com/immersive-design-76499204d5f6#.3wyypns43" target="_blank" rel="noopener">How to Design for Virtual Reality | WIRED</a></p></li><li><p><a href="http://tech.163.com/16/0704/08/BR4A8RR100097U7U.html" target="_blank" rel="noopener">设计沉浸式体验的6个秘密</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/ImmerExp-framework.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://uegeek.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Design" scheme="http://uegeek.com/tags/Design/"/>
    
      <category term="设计" scheme="http://uegeek.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="Guideline" scheme="http://uegeek.com/tags/Guideline/"/>
    
      <category term="Exhibition" scheme="http://uegeek.com/tags/Exhibition/"/>
    
      <category term="Immersive" scheme="http://uegeek.com/tags/Immersive/"/>
    
      <category term="Experience" scheme="http://uegeek.com/tags/Experience/"/>
    
      <category term="展览" scheme="http://uegeek.com/tags/%E5%B1%95%E8%A7%88/"/>
    
      <category term="沉浸式" scheme="http://uegeek.com/tags/%E6%B2%89%E6%B5%B8%E5%BC%8F/"/>
    
      <category term="体验" scheme="http://uegeek.com/tags/%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Blender Principled BSDF shader 使用教程</title>
    <link href="http://uegeek.com/190612-principled-bsdf.html"/>
    <id>http://uegeek.com/190612-principled-bsdf.html</id>
    <published>2019-06-12T08:53:17.000Z</published>
    <updated>2019-09-05T08:45:50.920Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://docs.blender.org/manual/en/2.80/_images/render_shader-nodes_shader_principled_example-1a.jpg" alt=""></p><a id="more"></a><p>Principle BSDF 是 Blender 默认的材质 shader 节点。</p><p>如果你刚接触 Blender ，或者对材质还不太了解，那么见到 Principled BSDF 的选项一定有点懵：</p><p><img src="https://docs.blender.org/manual/zh-hans/2.79/_images/render_cycles_nodes_types_shaders_principled_node.png" alt=""></p><p>这么多参数到底都是啥？要怎样调出想要的玻璃或泥土材质？</p><p>今天我们就来仔细了解一下这个「万能」材质shader。(如果你对 Material、shader、texture 还感到茫然，建议先看一下 <a href="https://www.uegeek.com/190608-material-texture-shaders.html" target="_blank" rel="noopener">一文看懂材质/纹理 Material, Texture, Shading, Shader 的区别</a>)</p><h2 id="什么是-Principled-BSDF？"><a href="#什么是-Principled-BSDF？" class="headerlink" title="什么是 Principled BSDF？"></a>什么是 Principled BSDF？</h2><blockquote><p>Principled BSDF 将多个层组合成一个易于使用的节点。 它基于迪士尼原理模型，也称为“PBR”着色器，使其与其他软件兼容，如皮克斯的 Renderman®和虚幻引擎®。 从 SubstancePainter® 等软件绘制或烘焙的图像纹理可以直接链接到此着色器中的相应参数。</p></blockquote><p>这是 Blender 官方文档中对 Principled BSDF 的说明。</p><p>可以说，这是一款综合型的材质生成着色器(shader)，跟时下普遍使用的 PBR (<a href="https://en.wikipedia.org/wiki/Physically_based_rendering" target="_blank" rel="noopener">Physically based rendering</a>) 是原理类似的技术。</p><p>那么，BSDF 又是什么？跟 BSDF 相似的还有一个 BRDF ：</p><blockquote><p>BRDF - Bidirectional reflectance distribution function</p><p>BSDF - Bidirectional scattering distribution function</p></blockquote><p>它们是 「双向 反射/散射」分布函数的缩写。</p><p>想要正确模拟真实世界中的光照，需要理解光遇到物体表面时发生的<a href="http://photorealizer.blogspot.com/2012/05/diffuse-and-specular-reflection.html" target="_blank" rel="noopener">反射和散射</a>。</p><p><img src="http://2.bp.blogspot.com/-6DFfNjFAq3Q/T4p0bf3wEoI/AAAAAAAAAa8/d7jB6gXN6aI/s320/Diffuse_reflection.gif" alt=""></p><blockquote><p>Non metals will exhibit both reflection and refraction. </p></blockquote><p><img src="http://img.viz.mobi/BSDF-img1.png" alt=""></p><blockquote><p>Metallic materials only have reflection. All refracted light is absorbed. </p></blockquote><p><img src="http://img.viz.mobi/BSDF-img2.png" alt=""></p><p>BSDF 就是帮助我们实现更逼真的光散射效果的函数。</p><p>在 Blender 的旧版本中，默认的材质节点是 emission。为什么后来改成了这个看似很复杂的 Principled BSDF 呢？Blender guru 在<a href="https://www.youtube.com/watch?v=4H5W6C_Mbck&amp;t=1669s" target="_blank" rel="noopener">这个视频</a> 中分析了 Principle BSDF 的优势，包括：</p><ul><li>默认处理 fresnel：渲染引擎自动处理物体边缘反光强于中心的光照效果</li><li>更合理的粗糙度：粗糙度增加，fresnel 相应减弱</li><li>金属和绝缘体的区分：金属反光有颜色，绝缘体没有</li><li>其他一些技术细节</li></ul><h2 id="Principled-BSDF-的参数"><a href="#Principled-BSDF-的参数" class="headerlink" title="Principled BSDF 的参数"></a>Principled BSDF 的参数</h2><p>大致了解了 Principled BSDF 之后，我们再来熟悉一下它哪些看似眼花缭乱的参数。</p><p>作为材质 shader 的头牌，它的能耐一定不容小觑。下面这张官方文档中的图，十分直观地展现了 Principled BSDF 的能力：</p><p><img src="https://docs.blender.org/manual/en/latest/_images/render_cycles_nodes_types_shaders_principled_example-1a.jpg" alt=""></p><p>图片左侧就是 BSDF 的主要参数，右侧展示了设置为0~1不同数值时材质的效果。</p><p>看似非常 overwhelming，对吧？别晕，我们仔细来观察一下，哪些行的最左侧和最右侧差别最大？</p><p>其实只有这几行：metallic，specular，roughness，transmission。</p><p>这个观察结果非常重要，它提示我们，BSDF 中最重要也是最常用的参数，其实只有几个：</p><ul><li>Base color</li><li>Metallic：大多数情况只取 0 或 1，绝缘体为0，金属为1，不需要取中间状态</li><li>Roughness</li><li>Normal(bump mapping)</li></ul><p><img src="http://img.viz.mobi/render_cycles_nodes_types_shaders_principled_node-zh.png" alt=""></p><p>为什么没有把 Specular（反光）列在里面？因为反光程度跟材质的关系很大。如果是金属，反光会较强，而非金属的反射较弱。所以一般不调 Specular，而是设置 Roughness 是 0 (金属) 还是 1 (非金属)。</p><p>更多的参数说明，可以参考<a href="https://docs.blender.org/manual/en/2.79/render/cycles/nodes/types/shaders/principled.html" target="_blank" rel="noopener">官方文档</a>。</p><h2 id="如何使用-Principled-BSDF？"><a href="#如何使用-Principled-BSDF？" class="headerlink" title="如何使用 Principled BSDF？"></a>如何使用 Principled BSDF？</h2><p>接下来以 Suzanne 为例，看看如何使用 Principled BSDF 调节材质。</p><p><img src="http://img.viz.mobi/190602bsdf.jpg" alt=""></p><p>首先，寻找并下载自己喜欢的材质包(图片分辨率最好2k以上)，将材质包中不同的图片连接到节点的对应参数。一般来说，图片（从文件名可以判断）对应的参数如下：</p><ul><li>Base color 基础色 —— 连接到 BSDF 中的 basecolor</li><li>Metallic 金属 —— 数据源为 Non-color data，连接到 BSDF 中的 metallic</li><li>Roughness 粗糙度—— 数据源为 Non-color data，连接到 BSDF 中的 roughness</li><li>Normal 法线 —— 数据源为 Non-color data，新建 Vector - normal map 节点，新建 Vector-bump node 节点，连接到 normal，再连接到 BSDF 中的 normal</li><li>Height/displacement 等高线 —— 数据源为 Non-color data，连接到 BSDF 中的 metallic</li><li>Ambient occlusion 环境光遮蔽—— Blender已经自动处理了，不过在游戏引擎里需要用到</li></ul><p>Node editor 的连线如下：</p><p><img src="http://img.viz.mobi/SuzanneBSDF.jpg" alt=""></p><p>在图片节点上游，还有两个用于修改贴图位置的节点</p><ul><li>Vector-mapping 节点，连接 vector 到导入的素材</li><li>Input-texture coordinates 节点，连接 uv 出口到 Mapping 的 Vector 入口</li></ul><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://docs.blender.org/manual/en/2.79/render/cycles/nodes/types/shaders/principled.html" target="_blank" rel="noopener">Principled BSDF — Blender Manual</a></p><p><a href="https://blog.selfshadow.com/publications/s2015-shading-course/hoffman/s2015_pbs_physics_math_slides.pdf" target="_blank" rel="noopener">Physics and Math of Shading</a></p><p><a href="https://www.wikiwand.com/en/Bidirectional_scattering_distribution_function" target="_blank" rel="noopener">Bidirectional scattering distribution function - Wikiwand</a></p><p><a href="https://classroom.udacity.com/courses/cs291/lessons/124106597/concepts/1765858280923" target="_blank" rel="noopener">BSDF and BSSRDF - Udacity</a></p><p><a href="https://www.youtube.com/watch?v=QxBhZjG5CaI" target="_blank" rel="noopener">BSDF and BSSRDF - Interactive 3D Graphics - YouTube</a></p><p><a href="https://www.youtube.com/watch?v=a5KOdVft93E" target="_blank" rel="noopener">Blender 2.8 How to use PBR textures with principled bsdf Cycles/Eevee - YouTube</a></p><p><a href="https://www.youtube.com/watch?v=4H5W6C_Mbck" target="_blank" rel="noopener">How to Use Blender’s New “Ultimate” Shader: The Principled BSDF - YouTube</a></p><p><a href="https://blender.stackexchange.com/questions/46424/add-a-transparent-image-on-top-of-a-material/46447#46447" target="_blank" rel="noopener">cycles - Add a transparent image on top of a material - Blender Stack Exchange</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://docs.blender.org/manual/en/2.80/_images/render_shader-nodes_shader_principled_example-1a.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="Blender" scheme="http://uegeek.com/tags/Blender/"/>
    
      <category term="OpenGL" scheme="http://uegeek.com/tags/OpenGL/"/>
    
      <category term="Material" scheme="http://uegeek.com/tags/Material/"/>
    
      <category term="Shader" scheme="http://uegeek.com/tags/Shader/"/>
    
      <category term="Principled BSDF" scheme="http://uegeek.com/tags/Principled-BSDF/"/>
    
      <category term="Texture" scheme="http://uegeek.com/tags/Texture/"/>
    
      <category term="材质" scheme="http://uegeek.com/tags/%E6%9D%90%E8%B4%A8/"/>
    
      <category term="贴图" scheme="http://uegeek.com/tags/%E8%B4%B4%E5%9B%BE/"/>
    
      <category term="计算机图形" scheme="http://uegeek.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>一文看懂材质/纹理 Material, Texture, Shading, Shader 的区别</title>
    <link href="http://uegeek.com/190608-material-texture-shaders.html"/>
    <id>http://uegeek.com/190608-material-texture-shaders.html</id>
    <published>2019-06-08T12:13:37.000Z</published>
    <updated>2019-06-08T12:32:21.529Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.pinimg.com/150x150/c7/dc/3f/c7dc3f37515f0b4d200d85392c523fc4.jpg" alt=""></p><a id="more"></a><p>在计算机图形学和三维设计中，有几个容易混淆的概念。今天我们来一举拿下。</p><h2 id="概念整理"><a href="#概念整理" class="headerlink" title="概念整理"></a>概念整理</h2><table><thead><tr><th>英文</th><th>中文</th><th>本质</th><th>释义</th></tr></thead><tbody><tr><td><a href="https://www.wikiwand.com/en/Materials_system" target="_blank" rel="noopener">Material</a></td><td>材质</td><td>数据集</td><td>表现物体对光的交互，供渲染器读取的数据集，包括贴图纹理、光照算法等</td></tr><tr><td><a href="https://www.wikiwand.com/en/Texture_mapping" target="_blank" rel="noopener">Texture mapping</a></td><td><a href="[https://www.wikiwand.com/zh/%E6%9D%90%E8%B4%A8%E8%B4%B4%E5%9B%BE](https://www.wikiwand.com/zh/材质贴图">纹理贴图</a>)</td><td>图像映射规则</td><td>把存储在内存里的位图，通过 UV 坐标映射到渲染物体的表面</td></tr><tr><td>Shading</td><td>底纹、阴影</td><td>光影效果</td><td>根据表面法线、光照、视角等计算得出的光照结果</td></tr><tr><td><a href="https://www.wikiwand.com/en/Shader" target="_blank" rel="noopener">Shader</a></td><td><a href="[https://www.wikiwand.com/zh/%E7%9D%80%E8%89%B2%E5%99%A8](https://www.wikiwand.com/zh/着色器">着色器</a>)</td><td>程序</td><td>编写显卡渲染画面的算法来即时演算生成贴图的程序</td></tr><tr><td><a href="https://www.wikiwand.com/zh/GLSL" target="_blank" rel="noopener">GLSL</a></td><td></td><td>程序语言</td><td>OpenGL 着色语言</td></tr></tbody></table><p>可以这么总结：</p><blockquote><p>Material 是表现 Shading 的数据集。其他几个概念都是生成这一数据集的资源或者工具。</p></blockquote><p><img src="http://img.viz.mobi/MaterialConcepts.png" alt=""></p><p>这么多概念，无非是为了完成一个共同目标：<strong>用计算机表现真实可信的 Shading</strong>。</p><p>Shading 是真实世界中的光影效果，它是由物体表面材质、灯光、观察者的视角等多种因素共同决定的。要实现计算机的模拟生成，是一个非常复杂的过程。不过它的原理大概可以简化为一个函数：</p><blockquote><p>Intensity =  Material (Light, Eye)</p></blockquote><p>也就是说，光影的强度，是由 a.照在材质上的光  b.视线 共同决定的。</p><h2 id="如何制造-Shading-效果？"><a href="#如何制造-Shading-效果？" class="headerlink" title="如何制造 Shading 效果？"></a>如何制造 Shading 效果？</h2><p>万物看起来不尽相同，它们有各自的材质和纹理。</p><p>纹理（Texture）是什么？</p><blockquote><p>Texture is pattern or image applied to a surface to change its color, shininess or just about any other part of its appearance. —— <a href="https://classroom.udacity.com/courses/cs291/lessons/124106595/concepts/1703725970923#" target="_blank" rel="noopener">Texture introduction - Udacity</a></p></blockquote><p>纹理就是一段有规律、可重复的图像。利用纹理，我们可以非常取巧地让三维物体看起来更真实。</p><h3 id="方法一：贴上皮肤"><a href="#方法一：贴上皮肤" class="headerlink" title="方法一：贴上皮肤"></a>方法一：贴上皮肤</h3><p>贴图可以说是最简单的材质方法：</p><ul><li>选定物体表面的某些区域</li><li>更改这个区域的一些属性(如颜色、反光度、透明度等)</li></ul><p>那么 UV Mapping 又是什么？跟 Texture Mapping 有什么区别呢？</p><p>可以这么理解，Texture Mapping 是目标，把材质用一种规则映射到物体表面。而 UV Mapping 就是映射的规则。在这个规则中，给三维体每一个顶点增加两个值 U 和 V，它们记录了三维表面和二维表面的坐标对应关系：</p><p><img src="http://img.viz.mobi/textureUV.jpg" alt=""></p><p>via <a href="https://classroom.udacity.com/courses/cs291/lessons/124106595/concepts/1703725990923" target="_blank" rel="noopener">Texture UVs</a></p><p>有了映射关系，我们就可以分门别类地把影响光照的不同参数，都通过图片映射到三维几何体上。这些参数包括：</p><ul><li><p>Diffuse Map 漫反射：模拟一个发光物对物体的方向性影响(Directional Impact)。它是光照模型中最显著的组成部分</p><p><img src="https://downloads.intercomcdn.com/i/o/52646545/49dbc08cd3840bc2d7654bdf/file-YYtlQsfLg4.jpg" alt=""></p></li><li><p>Specular/Reflection Map 镜面：模拟有光泽物体上面出现的亮点，它的颜色更接近光而不是物体的颜色</p><p><img src="https://downloads.intercomcdn.com/i/o/52646559/173c8c8c729e2912d8d8ff20/file-qPzs8jkFjw.jpg" alt=""></p></li><li><p>Normal/Bump Map 法线：决定物体形状的垂直于它的法线向量，提供有关物体表面深度的细节。每一种颜色代表了不同的轴向，看起来类似这样：</p><p><img src="https://downloads.intercomcdn.com/i/o/52646553/fe98859890182904757a311a/file-UzyMUgLevF.jpg" alt=""></p></li><li><p>Displacement Map 位移：使用高度图将经过纹理化的表面的实际几何点位置，沿着表面法线根据保存在纹理中的数值进行移位。相比法线，位移贴图更多用于大规模的地形材质，包括悬崖、岩石等</p><p><img src="https://downloads.intercomcdn.com/i/o/52646556/ccdbd16e6f1ead8d59ac7273/file-L7LoPDZQxz.jpg" alt=""></p></li><li><p>Ambient Map 环境</p></li><li><p>Gloss/Roughness Map 光泽</p></li></ul><h3 id="方法二：长出皮肤"><a href="#方法二：长出皮肤" class="headerlink" title="方法二：长出皮肤"></a>方法二：长出皮肤</h3><p>贴上皮肤的方法虽好，但是局限也很明显。如果没有合适的图像，或者要创建真实世界中罕见的材质，皮肤就不好找了。这个时候需要让程序帮忙「生长」出新的皮肤。</p><p>我们把这种程序叫做 Shaders。</p><p>如果你还记得，Shading 是始终如一的终极目标，那么应该就能明白为什么实现这个目标的程序叫做 Shaders 了。</p><p><img src="https://unity3d.com/sites/default/files/learn/shaderintro01.png" alt=""></p><p>它实际上是一个程序片段、一系列的指令，可以将三维 Mesh(网格)以指定方式与颜色、贴图等组合，完成复杂的计算输出（渲染器可读取的点和颜色的对应关系），会对屏幕上的每个像素同时下达命令。也就是说，代码必须根据像素在屏幕上的不同位置执行不同的操作。就像活字印刷，你的程序就像一个 function（函数），输入位置信息，输出颜色信息，当它编译完之后会以相当快的速度运行。</p><p>为什么 Shaders 运行特别快？因为它们常常运行在专门为并行处理（parallel processing）而设计的 GPU 上面。</p><p>最后一个问题，用什么来写 shaders 程序呢？答案是 OpenGL 着色器语言 (GLSL) 。GLSL 是用类 C 语言写成的，它为图形计算量身定制，包含一些针对向量和矩阵操作的有用特性。</p><hr><p>好了，今天涉及到的概念实在太多了。希望对大家进入三维世界玩耍有所帮助。</p><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul><li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/02%20Lighting/02%20Basic%20Lighting/" target="_blank" rel="noopener">光照基础 - LearnOpenGL-CN</a></li><li><a href="https://classroom.udacity.com/courses/cs291/" target="_blank" rel="noopener">交互式 3D 图形 - Udacity</a></li><li><a href="https://www.zhihu.com/question/25745472" target="_blank" rel="noopener">贴图、纹理、材质的区别是什么？ - 知乎</a></li><li><a href="https://gameinstitute.qq.com/community/detail/115074" target="_blank" rel="noopener">【Shader科普】贴图、纹理、材质的区别-腾讯游戏学院</a></li><li><a href="https://help.poliigon.com/general-information/what-are-the-different-texture-maps-for" target="_blank" rel="noopener">What are the different texture maps for? | Poliigon Help Center</a></li><li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/05%20Advanced%20Lighting/04%20Normal%20Mapping/" target="_blank" rel="noopener">法线贴图 - LearnOpenGL-CN</a></li><li><a href="https://www.wikiwand.com/zh/%E4%BD%8D%E7%A7%BB%E8%B4%B4%E5%9B%BE" target="_blank" rel="noopener">位移贴图 - Wikiwand</a></li><li><a href="https://unity3d.com/es/learn/tutorials/topics/graphics/gentle-introduction-shaders" target="_blank" rel="noopener">A Gentle Introduction to Shaders - Unity</a></li><li><a href="https://www.wikiwand.com/zh/GLSL" target="_blank" rel="noopener">GLSL - Wikiwand</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.pinimg.com/150x150/c7/dc/3f/c7dc3f37515f0b4d200d85392c523fc4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="OpenGL" scheme="http://uegeek.com/tags/OpenGL/"/>
    
      <category term="Material" scheme="http://uegeek.com/tags/Material/"/>
    
      <category term="Shader" scheme="http://uegeek.com/tags/Shader/"/>
    
      <category term="Texture" scheme="http://uegeek.com/tags/Texture/"/>
    
      <category term="材质" scheme="http://uegeek.com/tags/%E6%9D%90%E8%B4%A8/"/>
    
      <category term="贴图" scheme="http://uegeek.com/tags/%E8%B4%B4%E5%9B%BE/"/>
    
      <category term="计算机图形" scheme="http://uegeek.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>在生命战场，请远离伪科普——医药科普类书籍避坑方法</title>
    <link href="http://uegeek.com/190523-alzheimers-book-not-recommended.html"/>
    <id>http://uegeek.com/190523-alzheimers-book-not-recommended.html</id>
    <published>2019-05-23T09:32:49.000Z</published>
    <updated>2019-05-23T09:40:35.210Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始研究阿尔茨海默病（Alzheimer’s Disease），想找一本近两年出版的国外专著翻译来快速入门，于是买了一本去年才出版的书，名叫<a href="https://book.douban.com/subject/30322434/" target="_blank" rel="noopener">「终结阿尔茨海默病」</a>。</p><p>满心期待地翻开书，读完第一篇推荐序，直觉告诉我前方有坑……于是花半小时做了一次排雷工作，判断这是一本伪科普，直接弃读。</p><p>下面 00 整理排雷过程给大家参考，希望不要因为轻信金玉其外败絮其中的治疗方案，反而延误了病情。</p><a id="more"></a><h2 id="浏览推荐序"><a href="#浏览推荐序" class="headerlink" title="浏览推荐序"></a>浏览推荐序</h2><p>第一篇推荐序的作者是北京大学医学部教授王一方。来头不小，可是标题让我隐隐觉得不妥：</p><blockquote><p>假如总统傻呆了？</p></blockquote><p>王教授用了一定篇幅讲述里根总统患病的故事，缺少对书中核心内容深入浅出的学术阐述，这确实不像一位医学教授会写的东西。这篇序很短，匆匆扫过也就没有多想。</p><p>翻到第二篇推荐序，作者的头衔成功引起了我的注意：</p><blockquote><p>何裕民(中华医学会心身医学分会前任会长)</p></blockquote><p>心身医学分会，真是个扎眼的词啊。赶紧去搜索一下。</p><p>好家伙，Google 第一个结果的标题是：<a href="http://www.xys.org/xys/ebooks/others/science/dajia10/zhongyi2521.txt" target="_blank" rel="noopener">中医骗子何裕民欺骗实例二——把癌症病人逼成福尔摩斯</a></p><p>看看何裕民公众号的自我介绍：</p><blockquote><p>何裕民专家团,以“中医学和合学派”著名中医肿瘤专家、上海中医药大学教授<em>何裕民</em>为学科带头人,拥有多名著名肿瘤专家.</p></blockquote><p>中医肿瘤专家？？</p><p>继续扒，<a href="https://www.zhihu.com/question/24030250" target="_blank" rel="noopener">如何评价何裕民？他的癌症治疗理念是否科学？ - 知乎</a>。在微信文章 <a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1558594813&amp;ver=1623&amp;signature=IT9DbSZXixnjzLuM-0RK2ozFEvVtSJP2mVG2ca-GUK5cIbhj5e*L2YZqCiSdshz7eO5LWu8oAAGN3nKj2*0FCuS2ybOphtfX0aSk8wPEoN*wFuT06WbtCxdzno*TM-y3&amp;new=1" target="_blank" rel="noopener">掀开“神医”何裕民的面纱</a> 中有一段这样的描述：</p><blockquote><p>何裕民的诸多头衔也大多是虚假或糊弄人的。比如何裕民为了便于忽悠肿瘤患者，早在02年的时候，未经中华医学会和中华医学会心身医学会的正式批准，虚造了名为“中华医学会心身学会肿瘤康复委员会”的机构，此机构并未通过中华医学会同意，患者可要求其出示中华医学会的合法证明以辨真伪；还有其宣称是世界癌症心身康复组织中国总干事，此机构更是纯属忽悠癌症患者，此机构是由何裕民的姐夫在其请求下，在美国纽约注册的一个没有任何美国及中国的肿瘤专家参与的民间小社团。</p></blockquote><p>在<a href="https://www.cma.org.cn/art/2011/10/28/art_322_16989.html" target="_blank" rel="noopener">中华医学会心身医学分会换届情况</a>页面中查证确实有这个分会。至于上文提到的“中华医学会心身学会肿瘤康复委员会”，出处未明，就不继续搜了。</p><p>推荐序的作者，基本反映了这本书在领域内受认可的程度。到这里，基本可以判断这本书不值得读了。</p><h2 id="作者的学术声望"><a href="#作者的学术声望" class="headerlink" title="作者的学术声望"></a>作者的学术声望</h2><p>面对如此可疑的推荐序，接下来的重点是查一查作者。</p><p>用 author:”DE Bredesen” 关键词在 Google Scholar 中搜索，以第一作者发表的引用次数&gt;100的文章如下：</p><table><thead><tr><th>标题</th><th>期刊</th><th>时间</th><th>引用次数</th></tr></thead><tbody><tr><td><a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/ana.410380604" target="_blank" rel="noopener">Neural apoptosis</a></td><td>Annals of neurology</td><td>1995</td><td>671</td></tr><tr><td><a href="https://www.nature.com/articles/nature05293" target="_blank" rel="noopener">Cell death in the nervous system</a></td><td>Nature</td><td>2006</td><td>613</td></tr><tr><td><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4221920/" target="_blank" rel="noopener">Reversal of cognitive decline: A novel therapeutic program</a></td><td>Aging (Albany NY)</td><td>2014</td><td>193</td></tr><tr><td><a href="https://www.sciencedirect.com/science/article/pii/S0166223696010491" target="_blank" rel="noopener">p75NTR and apoptosis: Trk-dependent and Trk-independent effects</a></td><td>Trends in neurosciences</td><td>1997</td><td>182</td></tr><tr><td><a href="https://www.liebertpub.com/doi/abs/10.1089/neu.2000.17.801" target="_blank" rel="noopener">Apoptosis: overview and signal transduction pathways</a></td><td>Journal of neurotrauma</td><td>2000</td><td>132</td></tr><tr><td><a href="https://www.nature.com/articles/4401680" target="_blank" rel="noopener">Receptors that mediate cellular dependence</a></td><td>Cell death and differentiation</td><td>2005</td><td>106</td></tr><tr><td><a href="https://www.physiology.org/doi/abs/10.1152/physrev.00027.2003" target="_blank" rel="noopener">Apoptosis and dependence receptors: a molecular basis for cellular addiction</a></td><td>Physiological Reviews</td><td>2004</td><td>105</td></tr></tbody></table><p>作者的学术成果集中在 2006 年以前，从引用次数来看，成果肯定算不上领域的突破（那个年代阿尔茨海默的研究还很少吧）。</p><h2 id="作者的序"><a href="#作者的序" class="headerlink" title="作者的序"></a>作者的序</h2><p>接着我们再看看王婆卖瓜的程度，进一步判断这是否是一本严谨的医学科普专著。</p><blockquote><p>我们经过几十年努力，已经确定造成记忆损失的许多因素……这实质上是将21世纪的精准医学与中国传统医学有机组合的佳果。</p></blockquote><p>这一段简直让人触目惊心：</p><blockquote><p>我们发现阿尔茨海默病不是一种单一疾病，实际上，它分为 4 种不同类型：炎症型/热性型、萎缩型/寒性型、糖类中毒型/甜证型、毒素型/恶性型。</p></blockquote><p>咦咦咦，怎么这么熟悉，这不就是史前心理学的「体液说」（血液、黏液、黄胆汁和黑胆汁）的阿尔茨海默版本吗？</p><h2 id="还有谁在为它背书？"><a href="#还有谁在为它背书？" class="headerlink" title="还有谁在为它背书？"></a>还有谁在为它背书？</h2><p>如果这本书介绍的阿尔茨海默病疗法，真的是划时代突破，相信为这个疾病奋战多年的一线科研、医护人员会鼎力推荐吧。</p><p>请注意看以下推荐名单：</p><p>国外：畅销书作者 5 人，研究中心/研究所 4 人，学术得奖人 1 人，名人 1 人</p><p>国内：医学人文学者 5 人，中华医学会心身分会 3 人，媒体 2 人，中医 1 人</p><p>阿茨海默临床工作者：0 人</p><blockquote><p>大卫·帕尔马特，医学博士，《纽约时报》畅销书《谷物大脑》和《脑的创造者》作者</p><p>莎拉·哥特福德，医学博士，《纽约时报》畅销书《年轻人》作者</p><p>杰弗里·布兰德，克里弗兰医学中心功能性药物研究所创始人</p><p>里洛·霍德，医学、哲学博士，奥巴马总统亲自授予的国家科学奖章获得者，美国系统医学研究所创始人</p><p>迈克尔·莫贞奇，2016年国际卡夫利神经学奖获得者</p><p>纳森·普莱斯，教授，哲学博士，美国系统医学研究所副主席</p><p>史蒂芬·甘得瑞，医学博士，国际心肺研究所医学主席，《纽约时报》畅销书《植物悖论》作者</p><p>克里司·库赖索，美国文理学院理学硕士，《纽约时报》畅销书《古老的治病良法》作者</p><p>派特里克·哈拿威，医学博士，克里弗兰医学中心功能性药物研究所创始人、医学主席</p><p>玛丽亚·舒尔瓦，施瓦辛格之妻，美国知名电视节目《今日秀》嘉宾</p><p>马克·海曼，医学博士，克里弗兰医学中心功能性药物研究所主席，《纽约时报》畅销书《吃肉变瘦》作者</p><p>阮根·查特吉，英国皇家医学院成员</p><p>杜治政，教授，著名医学大师，中华医学会伦理学分会原会长，中国医学人文学的开创者</p><p>袁钟，教授，中国医师协会医学人文分会后任会长，著名健康传播专家，中国协和医科大学出版社原社长</p><p>王一方，北京大学医学部教授，著名的医学人文学者</p><p>赵明杰，教授，大连医科大学人文学院院长，中华医学会伦理学分会会长，著名医学哲学专家</p><p>段志光，教授，山西医科大学原校长，现任山西中医药大学党委书记，著名医学家、医学人文学者</p><p>吴爱勤，教授，中华医学会心身医学分会会长，著名精神病学专家，苏州医学院原院长</p><p>何裕民，教授，中华医学会心身医学分会前任会长，中国健诺思医学研究院创始人兼名誉院长，著名临床肿瘤专家， 畅销书《癌症只是慢性病》《抗癌力》 作者</p><p>袁勇贵，教授，中华医学会心身医学分会后任会长，著名脑科专家，医学领军人才</p><p>佟彤，主任记者，《北京晨报》首席记者，著名健康传播专家</p><p>庄丽，主任编辑，中央广播电视总台、《养生大讲堂》主持人，著名健康传播专家</p><p>张晔，教授，旅英资深中医学家、资深针灸医师，上海中医药大学原针灸系教授, 现任英国凤凰中医研究院院长</p></blockquote><h2 id="避坑方法总结"><a href="#避坑方法总结" class="headerlink" title="避坑方法总结"></a>避坑方法总结</h2><ol><li>查询作者是否领域内公认的专家，可搜索其论文发表的期刊和引用次数，看看是否在 TED 演讲过</li><li>阅读作者写的序，感受专业积累和行文风格</li><li>查询推荐序作者、其他推荐人的背景</li><li>查询出版社和译者在领域内的水平</li><li>询问相关背景的朋友，征求意见</li><li>查看豆瓣评分和评论，尤其是差评</li><li>查询是否有配套售卖产品，或其他利益相关的导流手段</li></ol><p>人生真的有点艰难，性命相关的坑遍地都是。</p><p>阿尔茨海默病是一场旷日持久的抗战，它宣战，你和家人不得不战。你我可能都是手无寸铁的新手，但不妨碍我们沉着应战。</p><p>欢迎病人家属、APOE4基因携带者、科普爱好者、临床工作者等入群交流。</p><p>严禁广告，谢绝中医、身心灵爱好者、伸手党、围观党、灌水党。</p><p><img src="https://mmbiz.qlogo.cn/mmbiz_jpg/Mrzzl4KuLapmfDEbSSVRrialsl3erUcp9SOLTWajNGdOjBtXfpv7MIIE5s0yCqia7LnLYbFMg4KqybHdjiacpPMzQ/?wx_fmt=jpeg" alt="img"></p><p>（如果群满，请加微信 artncode 为好友，注明 AD）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始研究阿尔茨海默病（Alzheimer’s Disease），想找一本近两年出版的国外专著翻译来快速入门，于是买了一本去年才出版的书，名叫&lt;a href=&quot;https://book.douban.com/subject/30322434/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;「终结阿尔茨海默病」&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;满心期待地翻开书，读完第一篇推荐序，直觉告诉我前方有坑……于是花半小时做了一次排雷工作，判断这是一本伪科普，直接弃读。&lt;/p&gt;
&lt;p&gt;下面 00 整理排雷过程给大家参考，希望不要因为轻信金玉其外败絮其中的治疗方案，反而延误了病情。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://uegeek.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="Alzheimer&#39;s" scheme="http://uegeek.com/tags/Alzheimer-s/"/>
    
      <category term="阿尔茨海默" scheme="http://uegeek.com/tags/%E9%98%BF%E5%B0%94%E8%8C%A8%E6%B5%B7%E9%BB%98/"/>
    
      <category term="笔记" scheme="http://uegeek.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>三维制图讲义08 - 几何体组合和布尔操作</title>
    <link href="http://uegeek.com/190425-3d08-boolean-modifier.html"/>
    <id>http://uegeek.com/190425-3d08-boolean-modifier.html</id>
    <published>2019-04-25T04:50:37.000Z</published>
    <updated>2019-04-25T04:52:01.050Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/3d_course_title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190306-3d01-welcome-to-the-3d-world.html" target="_blank" rel="noopener">三维制图讲义01 - 欢迎来到三维世界</a></p><p><a href="https://www.uegeek.com/190314-3d02-workflow.html" target="_blank" rel="noopener">三维制图讲义02 - 三维制作流程</a></p><p><a href="https://www.uegeek.com/190320-3d03-blender-intro.html" target="_blank" rel="noopener">三维制图讲义03 - 三维软件和Blender介绍</a></p><p><a href="https://www.uegeek.com/190327-3d04-basic-geometry.html" target="_blank" rel="noopener">三维制图讲义04 - 基础几何体</a></p><p><a href="https://www.uegeek.com/190403-3d05-basic-geometry-edit.html" target="_blank" rel="noopener">三维制图讲义05 - 几何体编辑：拉伸和环切</a></p><p><a href="https://www.uegeek.com/190411-3d06-geometry-practice.html" target="_blank" rel="noopener">三维制图讲义06 - 基础几何体练习</a></p><p><a href="https://www.uegeek.com/190418-3d07-basic-geometry.html" target="_blank" rel="noopener">三维制图讲义07 - 基础几何体练习2</a></p><p>(本系列为 00  在星海音乐学院的课程讲义)</p><p>在三维设计里的布尔操作，简单理解就是用两个或以上几何体的并集、差集、交集来建立新的几何体。</p><h2 id="几何体组合"><a href="#几何体组合" class="headerlink" title="几何体组合"></a>几何体组合</h2><p>想象一下，如果有两个几何体 A 和 B，它们有一部分是重叠的。</p><p>当我们把 AB 合并到一起时，或者从 A 中减去 B，有或者取 AB 完全重叠的部分，就会产生下图的三种不同结果：</p><p><img src="http://img.viz.mobi/booleanFig2.gif" alt=""></p><ul><li>并集：合并的操作，类似加法</li><li>差集：削减的操作，类似减法</li><li>交集：取共性的操作</li></ul><p>再来做两个练习，想象一下如何由两种基本的几何体，做多步的组合，得出一个比较复杂的几何体：</p><p><img src="http://img.viz.mobi/04fig62.jpg" alt=""></p><p><img src="http://img.viz.mobi/Making-a-complex-3D-model-form-basic-shapes-3.png" alt=""></p><h2 id="Blender-里的布尔操作"><a href="#Blender-里的布尔操作" class="headerlink" title="Blender 里的布尔操作"></a>Blender 里的布尔操作</h2><p>布尔操作是 Blender 里的常客，尤其在制作一些机械元件、零部件时。</p><p>在做布尔操作之前，需要先明确哪个是母体、哪个是运算体。这两个奇怪的名字是我自己起的，它们的意思是：</p><ul><li>母体：用做基准的几何体，比如，我们要在一个立方体打一个贯通 z 轴的圆柱形的空洞，那么立方体就是被打洞的母体</li><li>运算体：用来做运算的几何体，还是上面的例子，用来做减法</li></ul><p><img src="http://img.viz.mobi/2019-04-25%2011.45.43.gif" alt=""></p><p>具体的操作步骤如上图所示：</p><ul><li>选中母体</li><li>右侧 modifier 菜单中选择 Boolean </li><li>选择操作类型(并集/差集/交集)</li><li>用吸管选择运算体</li><li>可以继续调整母体和运算体的关系，<strong>确认布尔运算需要点击 Apply 按钮</strong></li></ul><p>这周的练习，请复习上周的 Mirror 修改器，结合刚才学习的 Boolean 修改器，完成下面这个几何体：</p><p><img src="http://img.viz.mobi/blender_boolean.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/3d_course_title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="Modeling" scheme="http://uegeek.com/tags/Modeling/"/>
    
      <category term="Blender" scheme="http://uegeek.com/tags/Blender/"/>
    
      <category term="Geometry" scheme="http://uegeek.com/tags/Geometry/"/>
    
      <category term="Mirror" scheme="http://uegeek.com/tags/Mirror/"/>
    
      <category term="Boolean" scheme="http://uegeek.com/tags/Boolean/"/>
    
  </entry>
  
  <entry>
    <title>数字制造讲义08-Arduino声音应用2</title>
    <link href="http://uegeek.com/190423-df08-arduino-sound-2.html"/>
    <id>http://uegeek.com/190423-df08-arduino-sound-2.html</id>
    <published>2019-04-23T13:42:52.000Z</published>
    <updated>2019-04-23T13:51:18.348Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/week7title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190305-df01-digital-fabrication.html" target="_blank" rel="noopener">数字制造讲义01-成为数字世界的建造者</a></p><p><a href="https://www.uegeek.com/190313-df02-arduino-intro.html" target="_blank" rel="noopener">数字制造讲义02-Arduino入门</a></p><p><a href="https://www.uegeek.com/190319-df03-electronics-basic.html" target="_blank" rel="noopener">数字制造讲义03-电路基础</a></p><p><a href="https://www.uegeek.com/190326-df04-input-and-output.html" target="_blank" rel="noopener">数字制造讲义04-负责输入和输出的智能元件</a></p><p><a href="https://www.uegeek.com/190402-df05-communication.html" target="_blank" rel="noopener">数字制造讲义05-软硬件数据通信</a></p><p><a href="https://www.uegeek.com/190409-df06-midi-osc-practice.html" target="_blank" rel="noopener">数字制造讲义06-MIDI 和 OSC 数据传输练习</a></p><p><a href="https://www.uegeek.com/190417-df07-arduino-sound.html" target="_blank" rel="noopener">数字制造讲义07-Arduino声音应用</a></p><p>(本系列为 00  在星海音乐学院的课程讲义)</p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>还记得<a href="https://www.uegeek.com/190417-df07-arduino-sound.html" target="_blank" rel="noopener">上一周</a> 完成的三个练习吗：</p><ul><li>让蜂鸣器发声</li><li>蜂鸣器发出交替的报警声</li><li>用按键触发声音</li></ul><p><img src="http://img.viz.mobi/w7-buttonBuzzer.jpg" alt=""></p><p>这一周我们继续来完善，做出一个简单的旋律控制器。</p><h2 id="挑战4：用电位计控制音高"><a href="#挑战4：用电位计控制音高" class="headerlink" title="挑战4：用电位计控制音高"></a>挑战4：用电位计控制音高</h2><p>既然蜂鸣器可以发出不同的音高，那我们可不可以用旋钮控制音高，做一个 mini 的极简控制器呢？</p><p>在之前<a href="https://www.uegeek.com/190326-df04-input-and-output.html" target="_blank" rel="noopener">第四周的课程中</a>，我们已经建立起比较完整的输入输出元件的概念。在项目练习时就可以慢慢养成习惯：在动手之前，先构想出输入部分是什么、输出部分是什么、从输入到输出要完成什么样的转换。</p><p><img src="https://www.popcorn.org/portals/0/Images/what%20makes%20popcorn%20pop.jpg?ver=2015-09-18-093058-067" alt=""></p><p>这里，输入部分是电位计（的位置），输出部分是蜂鸣器(的音高)，中间的连接就是电位计的数值转换为蜂鸣器的音高。</p><p>接线部分，使用的元件包括：蜂鸣器，电位计。</p><p><img src="http://img.viz.mobi/w7-potentiometerBuzzer.jpg" alt=""></p><p>当我们还是编程新手，每次要开始自己写代码时，容易两眼一抹黑，不知道该从哪里下手。</p><p>其实，每次写代码时，并不是直接打开 Arduino IDE 就开始噼里啪啦敲代码了。在这之前，我们需要现在脑子里构思这个代码<strong>要做什么，怎么做到</strong>。</p><p>大家会想一下，怎么把大象放进冰箱里呢？</p><p><img src="http://cdc.tencent.com/wp-content/uploads/2011/03/banner12.jpg" alt=""></p><p>不要笑，这就是所谓的「算法」：做一件事情的步骤。</p><p>所以在还没有清晰思路的时候，我们可以先把程序要完成的大致步骤写下来：</p><ul><li>需要用一个模拟端口读取电位计的数值</li><li>需要用一个数字（输出）端口给蜂鸣器发出指令</li><li>找一个办法让蜂鸣器发出不同音高</li><li>将电位计数值控制音高</li></ul><p>接着，我们再想办法把每一个步骤都转化成对应的变量、语法、库。所以学会搜索和查看官方文档就很重要的了。</p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// connect a potentiometer to pin A0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> buzzerPin=<span class="number">8</span>; </span><br><span class="line"><span class="keyword">int</span> potPin=A0;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">  pinMode(buzzerPin, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> freq = analogread(A0);</span><br><span class="line">  freq = <span class="built_in">map</span> (freq,<span class="number">0</span>,<span class="number">1023</span>,<span class="number">20</span>,<span class="number">20000</span>); <span class="comment">//map the value read from the potentiometer into the audible range</span></span><br><span class="line">  tone (buzzerPin,freq); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码中，最核心的一行，是把从电位计读取的模拟信号数值（范围是 0~1023），映射到人耳可感知的声音的频率范围(20~20000)：<code>freq = map (freq,0,1023,20,20000);</code>  其中 map() 函数的作用就是数值映射。 </p><h2 id="挑战5：播放连续音高"><a href="#挑战5：播放连续音高" class="headerlink" title="挑战5：播放连续音高"></a>挑战5：播放连续音高</h2><p>这个挑战一定会更吸引你：用蜂鸣器播放一段旋律。</p><p>这个挑战的难度主要在代码上，从这里开始，我们会开始接触并深入理解函数、循环、头文件、库等概念。</p><p>比较复杂的代码不可能一下子就能写出来。所以我们要经历一个重要的练习：看懂别人的代码。</p><p>我们在官方网站上找到教程 <a href="https://www.arduino.cc/en/Tutorial/ToneMelody?from=Tutorial.Tone" target="_blank" rel="noopener">Arduino - ToneMelody</a>。仔细研读它给出的代码，尤其是代码的注释：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  Melody</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Plays a melody</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  circuit:</span></span><br><span class="line"><span class="comment">  - 8 ohm speaker on digital pin 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  created 21 Jan 2010</span></span><br><span class="line"><span class="comment">  modified 30 Aug 2011</span></span><br><span class="line"><span class="comment">  by Tom Igoe</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  This example code is in the public domain.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  http://www.arduino.cc/en/Tutorial/Tone</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pitches.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// notes in the melody:</span></span><br><span class="line"><span class="keyword">int</span> melody[] = &#123;</span><br><span class="line">  NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, <span class="number">0</span>, NOTE_B3, NOTE_C4</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// note durations: 4 = quarter note, 8 = eighth note, etc.:</span></span><br><span class="line"><span class="keyword">int</span> noteDurations[] = &#123;</span><br><span class="line">  <span class="number">4</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// iterate over the notes of the melody:</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> thisNote = <span class="number">0</span>; thisNote &lt; <span class="number">8</span>; thisNote++) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// to calculate the note duration, take one second divided by the note type.</span></span><br><span class="line">    <span class="comment">//e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.</span></span><br><span class="line">    <span class="keyword">int</span> noteDuration = <span class="number">1000</span> / noteDurations[thisNote];</span><br><span class="line">    tone(<span class="number">8</span>, melody[thisNote], noteDuration);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// to distinguish the notes, set a minimum time between them.</span></span><br><span class="line">    <span class="comment">// the note's duration + 30% seems to work well:</span></span><br><span class="line">    <span class="keyword">int</span> pauseBetweenNotes = noteDuration * <span class="number">1.30</span>;</span><br><span class="line">    delay(pauseBetweenNotes);</span><br><span class="line">    <span class="comment">// stop the tone playing:</span></span><br><span class="line">    noTone(<span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// no need to repeat the melody.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把注释部分全部替换成自己的理解，这个代码看起来就不再那么复杂和难懂了。但是这个过程一定要自己完成。</p><p>当在代码里看到不熟悉的函数，例如 <code>delay()</code> , <code>noTone()</code> ，就可以到官方文档中搜索并阅读，一般文档都会给出例子，这些例子就是最好的学习材料。</p><p>最后，留给大家的作业，是用两个压电片触发两段不同的旋律，大家动手试试吧！</p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=p08632k4vzj" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/p08632k4vzj.html" target="_blank" rel="noopener">Arduino Melody_腾讯视频</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/week7title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="Sound" scheme="http://uegeek.com/tags/Sound/"/>
    
      <category term="声音" scheme="http://uegeek.com/tags/%E5%A3%B0%E9%9F%B3/"/>
    
      <category term="Creative Coding" scheme="http://uegeek.com/tags/Creative-Coding/"/>
    
      <category term="制造" scheme="http://uegeek.com/tags/%E5%88%B6%E9%80%A0/"/>
    
      <category term="Maker" scheme="http://uegeek.com/tags/Maker/"/>
    
      <category term="Digital Fabrication" scheme="http://uegeek.com/tags/Digital-Fabrication/"/>
    
      <category term="Fab" scheme="http://uegeek.com/tags/Fab/"/>
    
      <category term="Arduino" scheme="http://uegeek.com/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>三维制图讲义07 - 基础几何体练习2</title>
    <link href="http://uegeek.com/190418-3d07-basic-geometry.html"/>
    <id>http://uegeek.com/190418-3d07-basic-geometry.html</id>
    <published>2019-04-18T14:26:32.000Z</published>
    <updated>2019-04-18T14:27:32.833Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/3d_course_title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190306-3d01-welcome-to-the-3d-world.html" target="_blank" rel="noopener">三维制图讲义01 - 欢迎来到三维世界</a></p><p><a href="https://www.uegeek.com/190314-3d02-workflow.html" target="_blank" rel="noopener">三维制图讲义02 - 三维制作流程</a></p><p><a href="https://www.uegeek.com/190320-3d03-blender-intro.html" target="_blank" rel="noopener">三维制图讲义03 - 三维软件和Blender介绍</a></p><p><a href="https://www.uegeek.com/190327-3d04-basic-geometry.html" target="_blank" rel="noopener">三维制图讲义04 - 基础几何体</a></p><p><a href="https://www.uegeek.com/190403-3d05-basic-geometry-edit.html" target="_blank" rel="noopener">三维制图讲义05 - 几何体编辑：拉伸和环切</a></p><p><a href="https://www.uegeek.com/190411-3d06-geometry-practice.html" target="_blank" rel="noopener">三维制图讲义06 - 基础几何体练习</a></p><p><a href="https://www.uegeek.com/190411-3d06-geometry-practice.html" target="_blank" rel="noopener">上一节课</a>我们通过实际例子讲解了内插面和 Subdivision Surfaces 的应用。</p><p><img src="http://img.viz.mobi/2019-04-11%2010.31.46.gif" alt=""></p><p>这周我们继续通过实际的例子来练习已经学过的知识，并且学习新的技巧。</p><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><p>这个练习我们做一个底部是球状的瓶子。</p><p><img src="http://img.viz.mobi/w6-shape4.jpg" alt=""></p><p>首先是观察造型。这个瓶子跟上周练习的牛奶瓶有近似的部分，也有不同的地方。它的底部是一个球体，颈部弯曲比较平滑，瓶口也是跟牛奶瓶类似的形状。</p><p>所以思路是用一个球体，拉伸部分的曲面作为颈部，然后将顶部拉伸变形为瓶口的形状。</p><h3 id="选中部分曲面拉伸并用环切调整"><a href="#选中部分曲面拉伸并用环切调整" class="headerlink" title="选中部分曲面拉伸并用环切调整"></a>选中部分曲面拉伸并用环切调整</h3><p>选中部分曲面，可以用圈选操作来实现。也就是在面编辑模式下，按 c (circle的意思)，然后按下鼠标开始移动，在圆圈之内的面就会被选中。</p><p><img src="http://img.viz.mobi/bledner-circle-select.gif" alt=""></p><p>选中要拉伸的部分(按shift选择可以取消选中)，按 e 拉伸。</p><p>然后需要将顶部的曲面整平：选中状态下按 s，然后按 z，按数字键 0。意思是沿 z 轴缩放，全部调整为 0(在同一个水平面)。</p><p><img src="http://img.viz.mobi/2019-04-10%2000.12.46.gif" alt=""></p><p>接下来的部分，可以复习<a href="https://www.uegeek.com/190411-3d06-geometry-practice.html" target="_blank" rel="noopener">上一周制作瓶子的技巧</a>，也就是用环切、内插面、subdivision surfaces 等功能调整瓶子的形状了。</p><p>你也来试试吧！</p><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><p><img src="http://img.viz.mobi/w6-shape5.jpg" alt=""></p><p>这个练习我们会学到一个常用的修改器：镜射 / Mirror。</p><p>从字面上理解，就是生成对称的部分。</p><p><img src="https://blenderartists.org/uploads/default/original/4X/5/e/e/5eeff56a1927f6ad94d6fff32fe7cb9229092444.gif" alt=""></p><p>因为大部分的物体都会有对称的部分，所以这个功能很实用，可以帮助我们节省（一半的）时间。</p><p>需要留意的是，Mirror modifier 可以对 x/y/z 轴分别做镜像，也可以选择几何体为镜像中心。</p><p>观察我们要做的几何体，它应该是以 z 轴为基准的上下镜像，所以我们在镜射的选项中要勾选 z 轴。</p><p>我们以中间为参考线，拉伸立方体形成中部的长方体，然后做两道环切，选中中间两个面拉伸两次，然后选择两个需要桥接的面，接合。</p><p><img src="http://img.viz.mobi/2019-04-17%2021.31.04.gif" alt=""></p><p>这里要注意勾选上 Mirror modifier 的 Clipping 选项，它会帮助我们把镜像接缝处合并而不会留下重合的部分。</p><p>接下来的部分就简单了，对顶面拉伸然后缩放出一个较大的平面，然后向上拉伸，就得到了最终的形状。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/3d_course_title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="Modeling" scheme="http://uegeek.com/tags/Modeling/"/>
    
      <category term="Blender" scheme="http://uegeek.com/tags/Blender/"/>
    
      <category term="Geometry" scheme="http://uegeek.com/tags/Geometry/"/>
    
      <category term="Mirror" scheme="http://uegeek.com/tags/Mirror/"/>
    
  </entry>
  
  <entry>
    <title>数字制造讲义07-Arduino声音应用</title>
    <link href="http://uegeek.com/190417-df07-arduino-sound.html"/>
    <id>http://uegeek.com/190417-df07-arduino-sound.html</id>
    <published>2019-04-17T12:08:53.000Z</published>
    <updated>2019-04-23T13:51:11.528Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/week7title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190305-df01-digital-fabrication.html" target="_blank" rel="noopener">数字制造讲义01-成为数字世界的建造者</a></p><p><a href="https://www.uegeek.com/190313-df02-arduino-intro.html" target="_blank" rel="noopener">数字制造讲义02-Arduino入门</a></p><p><a href="https://www.uegeek.com/190319-df03-electronics-basic.html" target="_blank" rel="noopener">数字制造讲义03-电路基础</a></p><p><a href="https://www.uegeek.com/190326-df04-input-and-output.html" target="_blank" rel="noopener">数字制造讲义04-负责输入和输出的智能元件</a></p><p><a href="https://www.uegeek.com/190402-df05-communication.html" target="_blank" rel="noopener">数字制造讲义05-软硬件数据通信</a></p><p><a href="https://www.uegeek.com/190409-df06-midi-osc-practice.html" target="_blank" rel="noopener">数字制造讲义06-MIDI 和 OSC 数据传输练习</a></p><p>(本系列为 00  在星海音乐学院的课程讲义)</p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>上一节课，我们练习如何在不同软硬件设备（手机、Max、Arduino、Ableton Live）中传输 MIDI 和 OSC 数据。这些都是用软件发出声音。</p><p><img src="http://img.viz.mobi/Serial2Max.png" alt=""></p><p>这周我们继续通过实际的例子，学习如何用硬件发出声音。</p><h2 id="挑战1：让蜂鸣器发声"><a href="#挑战1：让蜂鸣器发声" class="headerlink" title="挑战1：让蜂鸣器发声"></a>挑战1：让蜂鸣器发声</h2><p>蜂鸣器是啥？</p><p>简单来说，它是一种一体化结构的电子讯响器，广泛应用于计算机、打印机、复印机、报警器、电子玩具、汽车电子设备、电话机、定时器等电子产品中，作发声器件。</p><p>蜂鸣器又可以分为有源蜂鸣器和无源蜂鸣器两种。</p><p><img src="http://img.viz.mobi/buzzer1.jpg" alt=""></p><p>它们的区别是什么？要如何区分呢？</p><ul><li>有源蜂鸣器内部集成有<strong>震荡源</strong>，只要提供直流电源就可以发声。无源蜂鸣器没有集成震荡源，需要接在音频输出电路中才可以发声。</li><li>无源蜂鸣器通的电路板通常是裸露的（如上图右），有源蜂鸣器的电路通常被黑胶覆盖</li><li>更精确的判断方法，用万用表电阻档 Rxl 档测试：用黑表笔接蜂鸣器 “+”引脚，红表笔在另一引脚上来回碰触，如果触发出咔、咔声的且电阻只有8Ω（或16Ω）的是无源蜂鸣器;如果能发出持续声音的，且电阻在几百欧以上的，是有源蜂鸣器。</li></ul><p>下面我们用到的是无源蜂鸣器。</p><p>在电路中连接蜂鸣器不需要增加额外的电阻，所以接线十分简单。在 Arduino 程序中，使用 <code>tone</code> 函数来指定蜂鸣器的频率和持续时间：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> buzzerPin = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  pinMode(buzzerPin, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tone(buzzerPin, <span class="number">440</span>, <span class="number">500</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="挑战2：蜂鸣器发出交替的报警声"><a href="#挑战2：蜂鸣器发出交替的报警声" class="headerlink" title="挑战2：蜂鸣器发出交替的报警声"></a>挑战2：蜂鸣器发出交替的报警声</h2><p>完成挑战 1，我们已经基本理解蜂鸣器和 <code>tone()</code> 函数如何工作了。</p><p>在修改代码之前，建议在官方文档中查看 <code>tone()</code> 和 <code>noTone()</code> 的详细说明。</p><p>Syntax</p><blockquote><p>tone(pin, frequency)<br>tone(pin, frequency, duration)</p></blockquote><p>Parameters</p><blockquote><p>pin: the pin on which to generate the tone<br>frequency: the frequency of the tone in hertz - unsigned int<br>duration: the duration of the tone in milliseconds (optional) - unsigned long</p></blockquote><p>这个挑战只需要在代码上做一些调整，就可以实现双音高交替的报警器效果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> buzzerPin = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  pinMode(buzzerPin, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tone(buzzerPin, <span class="number">440</span>, <span class="number">500</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  tone(buzzerPin, <span class="number">880</span>, <span class="number">500</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tone() 的第二个参数是音高的频率，我们把第一个音高设为 440，第二个音高设为 880，它们各持续 500 毫秒，中间有 1 秒的间隔。这样就形成了双音高的警报声。</p><h2 id="挑战3：用按键触发声音"><a href="#挑战3：用按键触发声音" class="headerlink" title="挑战3：用按键触发声音"></a>挑战3：用按键触发声音</h2><p>现在我们有了可以发出不同音高的蜂鸣器。接着我们做一个按钮控制发声的小应用。</p><p>接线中使用的元件包括：蜂鸣器，按钮，220Ω 和 10kΩ 电阻。</p><p><img src="http://img.viz.mobi/w7-buttonBuzzer.jpg" alt=""></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> button_pin = A0;</span><br><span class="line"><span class="keyword">int</span> buzzer_pin = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  pinMode(button_pin, INPUT);</span><br><span class="line">  pinMode(buzzer_pin, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> buttonState = digitalRead(button_pin);</span><br><span class="line">  Serial.println(buttonState);</span><br><span class="line">  <span class="keyword">if</span> (buttonState == HIGH) &#123;</span><br><span class="line">    tone(<span class="number">8</span>, <span class="number">440</span>, <span class="number">200</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的练习中，建议大家一定要动手画电路图、从 0 开始写代码，并且对代码加上必要的注释。这些训练能帮助我们更快熟悉和应用所学的知识。越早练习，才可以越早简化一些步骤。</p><p>在练习中一定会越到这样那样的错误，比如元件正负极一不小心就接反了，比如 Arduino 上传程序时总是出错，甚至有时候不正确的接线烧坏了元件。</p><p>错误是学习中最宝贵的机会，它提醒我们「此处有知识薄弱点」或者「步骤可完善的地方」。详细记录步骤，本身就是发现和解决问题很好的方法。把错误们储蓄起来，时不时拿出来复习，就能减少错误发生，提高熟练程度和准确度。</p><p>所以，多动手，早犯错，乐于在错误中寻找成长的路径，是可以伴随我们一路的好方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/week7title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="Sound" scheme="http://uegeek.com/tags/Sound/"/>
    
      <category term="声音" scheme="http://uegeek.com/tags/%E5%A3%B0%E9%9F%B3/"/>
    
      <category term="Creative Coding" scheme="http://uegeek.com/tags/Creative-Coding/"/>
    
      <category term="制造" scheme="http://uegeek.com/tags/%E5%88%B6%E9%80%A0/"/>
    
      <category term="Maker" scheme="http://uegeek.com/tags/Maker/"/>
    
      <category term="Digital Fabrication" scheme="http://uegeek.com/tags/Digital-Fabrication/"/>
    
      <category term="Fab" scheme="http://uegeek.com/tags/Fab/"/>
    
      <category term="Arduino" scheme="http://uegeek.com/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>三维制图讲义06 - 基础几何体练习</title>
    <link href="http://uegeek.com/190411-3d06-geometry-practice.html"/>
    <id>http://uegeek.com/190411-3d06-geometry-practice.html</id>
    <published>2019-04-11T03:40:11.000Z</published>
    <updated>2019-04-18T14:27:01.158Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/3d_course_title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190306-3d01-welcome-to-the-3d-world.html" target="_blank" rel="noopener">三维制图讲义01 - 欢迎来到三维世界</a></p><p><a href="https://www.uegeek.com/190314-3d02-workflow.html" target="_blank" rel="noopener">三维制图讲义02 - 三维制作流程</a></p><p><a href="https://www.uegeek.com/190320-3d03-blender-intro.html" target="_blank" rel="noopener">三维制图讲义03 - 三维软件和Blender介绍</a></p><p><a href="https://www.uegeek.com/190327-3d04-basic-geometry.html" target="_blank" rel="noopener">三维制图讲义04 - 基础几何体</a></p><p><a href="https://www.uegeek.com/190403-3d05-basic-geometry-edit.html" target="_blank" rel="noopener">三维制图讲义05 - 几何体编辑：拉伸和环切</a></p><h2 id="快速回顾"><a href="#快速回顾" class="headerlink" title="快速回顾"></a>快速回顾</h2><p>上一节课我们讲解了编辑模式下两个基本的操作：拉伸(Extrude)和环切(Loop Cut)。</p><p>什么是拉伸？就是拉着一个点/边/面走：</p><p><img src="https://thumbs.gfycat.com/ThunderousHandyBeagle-size_restricted.gif" alt=""></p><p>操作顺序是：<strong>选中物体，tab 键进入编辑模式，然后按 e 进入拉伸状态</strong>。</p><p><img src="https://raw.githubusercontent.com/a1studmuffin/SpaceshipGenerator/master/screenshots/step-by-step-animation.gif" alt=""></p><p>环切/Loop Cut 则帮助我们快速切分连续的边和面，获得更多的调节节点。使用快捷键的操作步骤：</p><ul><li>选择物体，按 tab 进入编辑模式</li><li>按快捷键 ctrl+r，将鼠标移到物体上，会出现环状的指示线(如果想退出环切状态，可以鼠标右键或者按 esc 键)</li><li>移动鼠标到想要的面(指示线只会出现在中点连接线)</li><li>按下鼠标左键，确定 Loop Cut</li></ul><p><img src="https://blenderartists.org/uploads/default/original/4X/8/c/7/8c70cbda30e9fc2a6d84539be6508614756f8e12.gif" alt=""></p><h2 id="细分曲面"><a href="#细分曲面" class="headerlink" title="细分曲面"></a>细分曲面</h2><p>随着对 Blender 操作的熟悉，我们会开始塑造更加复杂的形状。</p><p>形状复杂意味着什么？意味着我们需要对一个平面切分为多个子平面，然后调整这些子平面来获得更精确的控制。这就是细分曲面(sub-division)的概念。</p><p>下面我们连着看三个 Pixar in a Box 的视频，形象地理解一下什么是细分曲面。</p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=e0527y4lxf3" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/e0527y4lxf3.html" target="_blank" rel="noopener">Introduction to subdivision surfaces</a></p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=x0527k1vsqf" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/x0527k1vsqf.html" target="_blank" rel="noopener">第三课 Split vs. average_腾讯视频</a></p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=u0859bf0qse" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/u0859bf0qse.html" target="_blank" rel="noopener">Subdivision in 3D_腾讯视频</a></p><p>下面进入练习时间。通过 3 个练习，我们进一步巩固之前学过的操作，并且学习一些新的技能。</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="内插面"><a href="#内插面" class="headerlink" title="内插面"></a>内插面</h3><p>这个练习我们会学习一个新的操作：内插面（insect faces）。</p><p>内插面就是在一个面里面切一块按比例缩小的面：</p><p><img src="https://i.stack.imgur.com/ccGXJ.gif" alt=""></p><p>内插面的快捷键是 i。</p><p><img src="http://img.viz.mobi/w6-shape1.jpg" alt=""></p><p>上面的几何体的操作顺序是：</p><ul><li>新建立方体</li><li>按 tab 键进入编辑模式，按 3 键进入面选择模式，选中顶部的面</li><li>按 i 然后移动鼠标，调整内插面的大小，然后点鼠标左键确定</li><li>按 e 沿 z 轴拉伸刚才新建的内插面</li><li>按 i 再建一个内插面</li><li>按 e 沿 z 轴反方向拉伸，做出内凹的形状</li></ul><h3 id="拉伸-缩放-vs-缩放-拉伸"><a href="#拉伸-缩放-vs-缩放-拉伸" class="headerlink" title="拉伸+缩放 vs 缩放+拉伸"></a>拉伸+缩放 vs 缩放+拉伸</h3><p><img src="http://img.viz.mobi/w6-shape2.jpg" alt=""></p><p>这个练习帮助我们理解 <code>先拉伸后缩放</code> 和 <code>先缩放后拉伸</code> 的区别。</p><p>操作顺序是：</p><ul><li>新建立方体</li><li>按 tab 键进入编辑模式，选中顶部的面，按 g 然后沿 z 轴压扁 (也可以不进入编辑模式，直接缩放立方体）</li><li>选中顶部的面，按 i 建一个内插面</li><li>按 e 拉伸内插面，拉伸完毕后，按 s 缩小内插面</li></ul><p><img src="http://img.viz.mobi/2019-04-11%2010.25.56.gif" alt=""></p><ul><li>按 i 再建一个内插面，然后按 e 拉伸出中间长长的柱体</li><li>顶部的面按 e 然后 s，放大</li><li>按 e 拉伸，然后按 s 放大这个面，最后再按 e 拉伸，完成柱体</li></ul><p><img src="http://img.viz.mobi/2019-04-11%2010.28.05.gif" alt=""></p><ul><li>在四个侧面，选中面然后做内插面，向内拉伸内插面</li></ul><h3 id="使用-Subdivision-Surfaces-修改器"><a href="#使用-Subdivision-Surfaces-修改器" class="headerlink" title="使用 Subdivision Surfaces 修改器"></a>使用 Subdivision Surfaces 修改器</h3><p><img src="http://img.viz.mobi/w6-shape3.jpg" alt=""></p><ul><li>新建圆柱体，按 tab 键进入编辑模式，选中顶部的面</li><li>按 e 沿 z 轴拉伸，然后按 s 缩小口径</li><li>再按 e 向上拉伸，然后 e → s 放大，拉出瓶口的底部</li><li>再按 e 向上拉伸出瓶口，然后建内插面，再把内插面向内拉伸形成瓶口的凹陷</li></ul><p><img src="http://img.viz.mobi/2019-04-11%2010.31.46.gif" alt=""></p><p>添加 Subdivision Surfaces 的操作如下：</p><p>首先添加修改器(Modifier) 表面细分 / Subdivision Surface，将视图的细分值改为 2。</p><p><img src="http://img.viz.mobi/blender-subSurface.jpg" alt=""></p><p>然后添加环切，平整细分表面的边缘：</p><p><img src="http://img.viz.mobi/2019-04-11%2010.45.38.gif" alt=""></p><p>仔细调整各边缘的弧度，并且调整瓶颈的形状(添加、选中环切线并缩放)，最后得到瓶子。</p><p><img src="http://img.viz.mobi/w6-shape3.jpg" alt=""></p><p>最后，可以选择 物体-光滑着色，把几何体的表面变得更光滑一些。</p><p><img src="http://img.viz.mobi/blender-smoothshading.jpg" alt=""></p><p>快去练习吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/3d_course_title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="3D" scheme="http://uegeek.com/tags/3D/"/>
    
      <category term="Modeling" scheme="http://uegeek.com/tags/Modeling/"/>
    
      <category term="Blender" scheme="http://uegeek.com/tags/Blender/"/>
    
      <category term="Geometry" scheme="http://uegeek.com/tags/Geometry/"/>
    
      <category term="Subdivision" scheme="http://uegeek.com/tags/Subdivision/"/>
    
  </entry>
  
  <entry>
    <title>数字制造讲义06-MIDI 和 OSC 数据传输练习</title>
    <link href="http://uegeek.com/190409-df06-midi-osc-practice.html"/>
    <id>http://uegeek.com/190409-df06-midi-osc-practice.html</id>
    <published>2019-04-09T13:58:47.000Z</published>
    <updated>2019-04-09T14:00:19.246Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.viz.mobi/week7title.jpg" alt=""></p><a id="more"></a><p><a href="https://www.uegeek.com/190305-df01-digital-fabrication.html" target="_blank" rel="noopener">数字制造讲义01-成为数字世界的建造者</a><br><a href="https://www.uegeek.com/190313-df02-arduino-intro.html" target="_blank" rel="noopener">数字制造讲义02-Arduino入门</a><br><a href="https://www.uegeek.com/190319-df03-electronics-basic.html" target="_blank" rel="noopener">数字制造讲义03-电路基础</a><br><a href="https://www.uegeek.com/190326-df04-input-and-output.html" target="_blank" rel="noopener">数字制造讲义04-负责输入和输出的智能元件</a><br><a href="https://www.uegeek.com/190402-df05-communication.html" target="_blank" rel="noopener">数字制造讲义05-软硬件数据通信</a></p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>上一节课，我们学习了有哪些方式把不同的软硬件连接在一起，让它们之间可以传递数据，完成一定的功能。</p><p>有线的方式主要使用数据线进行串口通信。在远距离传输的场景下，则常使用互联网（广域网/局域网）。基于无线的连接主要包括 Wifi 和蓝牙。</p><p>传输音乐数据最常用的协议包括 MIDI 和 OSC。OSC 的分辨率更高、可传递的参数更丰富，它使用 UDP / IP 和以太网通过 Internet和局域网传输。</p><p><img src="http://img.viz.mobi/MIDIvsOSC.jpg" alt=""></p><p>OSC 已广泛应用于音乐表演、机器人、视频性能接口、分布式音乐系统和进程间通信等领域，在实验音乐控制器中更是必不可少。</p><p>下面我们就来实际操作几个例子。</p><h2 id="Mobile-MIDI-2-Max"><a href="#Mobile-MIDI-2-Max" class="headerlink" title="Mobile MIDI 2 Max"></a>Mobile MIDI 2 Max</h2><p>从移动端发送 MIDI 数据给其他设备，可以使用类似 KnobLab 的 APP，它支持多种传输方式：</p><p><img src="http://img.viz.mobi/KnobLab.jpg" alt=""></p><p>首先下载 KnobLab App。</p><p>然后我们在 Max 里面建一个简单的 patch，接收 KnobLab 发过来的 midi 数据，然后传给键盘并且 makenote：</p><p><img src="http://img.viz.mobi/KnobLab2Max.jpg" alt=""></p><p>打开 Setting 里面 MaxOS 的 Wifi 连接说明：</p><p><img src="http://img.viz.mobi/KnobLabWifiConnection.jpg" alt=""></p><p>打开电脑里的 Audio MIDI Setup，打开 MIDI Studio，点工具栏上的网络图标:</p><p><img src="http://img.viz.mobi/MIDIStudio.jpg" alt=""></p><p>打开网络设置窗口，在 My Sessions 下面勾选 Session 1，然后在 Directory 里面可以看到自己的手机(电脑和手机需要在同一个 Wifi 网络下)。然后点 Connect。</p><p><img src="http://img.viz.mobi/MIDINetworkSetup.jpg" alt=""></p><p>这时候已经可以用 KnobLab 操作，向 Max 发送 MIDI 数据了。在 Max 里面，要注意选择 midiin 的来源，双击对象就可以看到 Session 1 的选项，选择后，Max 才开始接收数据。</p><p>在 KnobLab 的主界面上转动旋钮，Max 就会发出对应的 MIDI 音高。</p><h2 id="Mobile-OSC-2-Max"><a href="#Mobile-OSC-2-Max" class="headerlink" title="Mobile OSC 2 Max"></a>Mobile OSC 2 Max</h2><p>在触摸设备如 iOS 上，用 <a href="https://hexler.net/software/touchosc" target="_blank" rel="noopener">TouchOSC</a> 操作复杂的 MIDI Controller 非常方便。</p><p><img src="https://hexler.net/gfx/_software/touchosc-11.png" alt=""></p><p>首先，在移动端下载 TouchOSC，在桌面端<a href="https://hexler.net/software/touchosc" target="_blank" rel="noopener">下载编辑器</a>。</p><p>在编辑器里面可以创建自定义的操作面板。我们也可以直接使用 TouchOSC 里面预设的面板。在设置页面的 Layout 项，点击进去即可选择面板。</p><p>连接的关键是设置 TouchOSC 的 IP 地址和输入输出端口。</p><p>确保电脑和手机处于同一个 Wifi 网络。然后我们查询电脑的 IP 地址。打开 Terminal，Windows 系统使用命令 ipconfig，MacOS 系统使用命令 ifconfig，回车后可以看到一长串的数据，仔细找到其中以 192.168 开头的局域网 IP 地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">en1: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 24:f6:77:08:87:04</span><br><span class="line">inet6 fe80::81c:2c9b:50cf:8e39%en1 prefixlen 64 secured scopeid 0x7</span><br><span class="line">inet 192.168.xx.xxx netmask 0xffffff00 broadcast 192.168.xxx.xxx</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br></pre></td></tr></table></figure><p>broadcast 后面的 192.168.xxx.xxx 就是需要填入 TouchOSC 设置中的 IP 地址。</p><p>打开手机 APP 进入设置页面，在 Host 里面填入上面的的 IP地址。</p><p><img src="https://guide.lightform.com/hc/article_attachments/360018787213/IMG_8577.png" alt=""></p><p>设置输入端口 Port(outgoing) 为某个数值，如 8800。</p><p>接下来就可以在 Max/MSP 里面接收和发送 OSC 数据了。因为 OSC 通过 UDP 协议传输，所以使用 <code>udpsend</code> 和 <code>udpreceive</code> 对象：</p><p><img src="http://img.viz.mobi/touchOSC2Max.jpg" alt=""></p><p><code>udpreceive</code> 的 port 参数应该跟 TouchOSC 设置的输出端口一致，如上图的 8800。</p><p>Max 接收到数据后，可以看到 OSC 的数据格式类似文件路径 URI：<code>/{序号}/{参数名} {参数值}</code>。</p><p>这样我们就把手机和电脑连接起来。只要将 TouchOSC 里面所有的 controller 都映射到 Max 中，就可以在手机上实现效果丰富的个性化控制。</p><h2 id="Arduino-2-Max"><a href="#Arduino-2-Max" class="headerlink" title="Arduino 2 Max"></a>Arduino 2 Max</h2><p>Arduino 和 Max 也可以方便地勾搭上。我们试着做一个旋钮控制音高的小应用。</p><p>首先搭出最简单的电位计电路。电位计正极接 5V 端口，负极接 GND，数据脚接 A0 端口：</p><p><img src="http://img.viz.mobi/potentiometer2midi.jpg" alt=""></p><p>Arduino 中的代码也非常简单：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> sensor_pin = A0;</span><br><span class="line"><span class="keyword">int</span> knobValue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>); <span class="comment">// open the arduino serial port</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  knobValue = analogRead(sensor_pin);</span><br><span class="line">  Serial.println(knobValue);</span><br><span class="line">  delay(<span class="number">500</span>); <span class="comment">// pause</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电路和 Arduino 发送数据已经准备好。接着我们处理 Max 接收数据的逻辑。</p><p><img src="http://img.viz.mobi/Serial2Max.png" alt=""></p><p>咦？为什么这么多接线？</p><p>其实并没有看上去复杂。</p><p>我们转动电位计，打开 Arduino 的串口监视器查看是否可以正常读数。然后再观察 Max 中有哪些数据进来。</p><p>Max 中使用 <code>serial</code> 对象读取串口数据，不过它输出的是未经处理的原始格式。如果用 print 对象打印出来，会看到接收的数据会是以下格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">54</span><br><span class="line">10</span><br><span class="line">35</span><br></pre></td></tr></table></figure><p>第一行的 13 和第三行的 10 都是标记，第二行和第四行才是串口数据，但是它是 ASCII 码，而不是直接可以使用的数字。所以还需要用 <code>itoa</code> 和 <code>fromsymbol</code> 对象将 ASCII 码转换为数字。因为电位计发送的模拟数据范围是 0~1023，所以接着我们用一个 <code>scale</code> 把数据映射到 MIDI 的数据范围 0~127，这样就可以发出音高了。</p><h2 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h2><p>Arduino 能不能直接跟 Ableton 连接呢？当然是可以的。</p><p>Ableton 已经提供了 Package，跟 Arduino 连接后，可以做好多脑洞大开的酷炫应用：</p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=h0190wbyt6w" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/h0190wbyt6w.html" target="_blank" rel="noopener">Max for Live Connection Kit_腾讯视频</a></p><p>具体教程，请查看：<a href="https://www.uegeek.com/190408-Ableton-Arduino.html" target="_blank" rel="noopener">Ableton Live 连接 Arduino 教程</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.viz.mobi/week7title.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="Ableton Live" scheme="http://uegeek.com/tags/Ableton-Live/"/>
    
      <category term="Creative Coding" scheme="http://uegeek.com/tags/Creative-Coding/"/>
    
      <category term="制造" scheme="http://uegeek.com/tags/%E5%88%B6%E9%80%A0/"/>
    
      <category term="Maker" scheme="http://uegeek.com/tags/Maker/"/>
    
      <category term="Digital Fabrication" scheme="http://uegeek.com/tags/Digital-Fabrication/"/>
    
      <category term="Fab" scheme="http://uegeek.com/tags/Fab/"/>
    
      <category term="Arduino" scheme="http://uegeek.com/tags/Arduino/"/>
    
      <category term="通信" scheme="http://uegeek.com/tags/%E9%80%9A%E4%BF%A1/"/>
    
      <category term="MIDI" scheme="http://uegeek.com/tags/MIDI/"/>
    
      <category term="OSC" scheme="http://uegeek.com/tags/OSC/"/>
    
      <category term="Max" scheme="http://uegeek.com/tags/Max/"/>
    
  </entry>
  
  <entry>
    <title>Ableton Live 连接 Arduino 教程</title>
    <link href="http://uegeek.com/190408-Ableton-Arduino.html"/>
    <id>http://uegeek.com/190408-Ableton-Arduino.html</id>
    <published>2019-04-08T11:14:46.000Z</published>
    <updated>2019-04-08T11:16:20.557Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-resources.ableton.com/resources/filer_thumbnails/fd/d4/fdd4707d-fbcb-441a-a07d-f6e58c9e717d/connkit_artwork_1000x1000.jpg__600x600_q85_crop_subsampling-2_upscale.jpg" alt=""></p><a id="more"></a><p>你有没有想过，用 Arduino 做一个简单的 MIDI controller，控制 Ableton Live 中的参数？</p><p>如果想实现两者的连接，以前的解决方案比较复杂，需要基于 Max/MSP，用 <a href="http://www.maxuino.org/" target="_blank" rel="noopener">Maxuino</a> 实现，还需要在 Arduino 上安装对应的固件。</p><p>有没有更简单的方法呢？</p><h2 id="Connection-Kit"><a href="#Connection-Kit" class="headerlink" title="Connection Kit"></a>Connection Kit</h2><p>好消息是，Ableton 已经提供了官方的 <a href="https://www.ableton.com/en/packs/connection-kit/" target="_blank" rel="noopener">Connection Kit</a>，其中包含了与流行的外接设备的连接工具如 Arduino、OSC、LEGO Mindstorms 等。</p><p>介绍视频真是帅炸了~</p><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=h0190wbyt6w" allowfullscreen="true"></iframe><p><a href="https://v.qq.com/x/page/h0190wbyt6w.html" target="_blank" rel="noopener">Max for Live Connection Kit_腾讯视频</a></p><p>如果你已经购买了 Ableton Live 10 Suit，可以在<a href="https://www.ableton.com/en/packs/connection-kit/" target="_blank" rel="noopener">官网直接下载这个 Pack</a>。如果不能直接下载，这个 Pack 的源文件也可以在 github 找到：<a href="https://github.com/Ableton/m4l-connection-kit" target="_blank" rel="noopener">Ableton/m4l-connection-kit: Max for Live Connection Kit</a>。下载后，将文件夹复制到 Documents-Ableton-Third-Party Packs。打开软件后，就可以在左侧找到 Arduino.amxd：</p><p><img src="http://img.viz.mobi/Ableton-connection-kit-pack.jpg" alt=""></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>开始连接之前，让我们看看<a href="https://github.com/Ableton/m4l-connection-kit/tree/master/Arduino" target="_blank" rel="noopener">使用说明</a>。</p><blockquote><p>The Arduino Max4Live device connects an Arduino Uno to Live using its serial port via USB and allows access to its analog inputs as well as its digital GPIOs. The device enables you to receive sensor data like switches, potentiometers or light-dependent resistors as well as sending Live parameter values to LEDs or servo motors. So far you may only connect sensors and other periphals to it directly as we do not yet support I2Cs and other periphals via the Serial Periphal Interface (SPI).</p></blockquote><p>目前应该只支持 Uno 板，由 USB 串口连接。</p><p>因为 Max4Live 需要特定的固件支持，所以我们先上传程序到 Arduino 板。上传的程序在 Arduino IDE 里面就有：File-&gt;Examples-&gt;Firmata-&gt;StandardFirmata。打开文件后(至少是 2.5 版本)，上传到板子。</p><p>接着我们可以在 Ableton 里面编辑一段 clip，双击 Arduino.amxd 加入到 device viewer 里。</p><p><img src="http://img.viz.mobi/addArduino2Ableton.jpg" alt=""></p><h2 id="连接测试电路"><a href="#连接测试电路" class="headerlink" title="连接测试电路"></a>连接测试电路</h2><p>回到 Arduino，接一个最简单的电路。找一个电位计，正极接 Uno 板的 5V 口，负极接 GND，中间的信号接 A0 模拟端口。</p><p><img src="http://img.viz.mobi/potentiometer2arduino.png" alt=""></p><p>上传以下程序，然后打开串口监视器，查看是否可以正常读取旋钮的值：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// initialize serial communication at 9600 bits per second:</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the loop routine runs over and over again forever:</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// read the input on analog pin 0:</span></span><br><span class="line">  <span class="keyword">int</span> sensorValue = analogRead(A0);</span><br><span class="line">  <span class="comment">// print out the value you read:</span></span><br><span class="line">  Serial.println(sensorValue);</span><br><span class="line">  delay(<span class="number">20</span>);        <span class="comment">// delay in between reads for stability</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功后，关闭串口监视器。</p><h2 id="Ableton-Mapping"><a href="#Ableton-Mapping" class="headerlink" title="Ableton Mapping"></a>Ableton Mapping</h2><p>然后到 Ableton 中，选择 port 为 usbmodemxxxx。切换到 Analog tab，点 A0 右侧的 Map 按钮，选择已经编辑的那个 track 的 Track Volume。</p><p>做好这一步映射后，可以看到 A0 旁边小小的蓝色指示条已经开始跳动。旋转电位计，会看到 Track 的音量产生了变化。</p><p>可是，这里的变化不太符合我们的预期：扭动旋钮停止后，音量还是会变化，甚至产生随机的爆音。</p><p>这是因为电位计产生了抖动。再打开 Arduino 串口监视器，可以观察到 A0 端口接收到的不是平滑的值，而是夹杂着很多不稳定的波动值。</p><p><img src="http://img.viz.mobi/ArduinoSerialMonitor.png" alt=""></p><h3 id="消抖处理"><a href="#消抖处理" class="headerlink" title="消抖处理"></a>消抖处理</h3><p>最简单的办法是在 kit 里面设置 Smooth 的值：</p><p><img src="http://img.viz.mobi/ableton-arduino-smooth.png" alt=""></p><p>但是这样做，误差会较大。我们可以进一步尝试在代码里消抖，或者在电路中加入电容消抖。可以参考这篇文章 <a href="https://www.instructables.com/id/Smooth-Potentiometer-Input/" target="_blank" rel="noopener">Smooth Potentiometer Input</a>。</p><p>进一步的消抖还需要参考一些资料继续研究。</p><ul><li><a href="http://forum.arduino.cc/index.php?topic=216582.0" target="_blank" rel="noopener">Debouncing a potentiometer</a></li><li><a href="https://forum.arduino.cc/index.php?topic=210348.0" target="_blank" rel="noopener">Writing an analog pot debounce as a function</a></li><li><a href="https://forum.arduino.cc/index.php?topic=75946.0" target="_blank" rel="noopener">Debounce a Potentiometer?</a></li><li><a href="https://www.jianshu.com/p/99d861de03e0" target="_blank" rel="noopener">arduino按钮传感器常见的几种消抖方法 - 简书</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-resources.ableton.com/resources/filer_thumbnails/fd/d4/fdd4707d-fbcb-441a-a07d-f6e58c9e717d/connkit_artwork_1000x1000.jpg__600x600_q85_crop_subsampling-2_upscale.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://uegeek.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ArtxCode" scheme="http://uegeek.com/tags/ArtxCode/"/>
    
      <category term="Music" scheme="http://uegeek.com/tags/Music/"/>
    
      <category term="Ableton Live" scheme="http://uegeek.com/tags/Ableton-Live/"/>
    
      <category term="Creative Coding" scheme="http://uegeek.com/tags/Creative-Coding/"/>
    
      <category term="Maker" scheme="http://uegeek.com/tags/Maker/"/>
    
      <category term="Arduino" scheme="http://uegeek.com/tags/Arduino/"/>
    
      <category term="MIDI" scheme="http://uegeek.com/tags/MIDI/"/>
    
  </entry>
  
</feed>
